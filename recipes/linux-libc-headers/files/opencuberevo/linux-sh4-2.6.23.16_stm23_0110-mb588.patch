commit d6cfdac836c52933b4ae3290689a1ac87f8733f7
Author: Pawel Moll <pawel.moll@st.com>
Date:   Tue May 13 11:44:05 2008 +0100

    MB588 (NAND Flash STEM board) support
    
    Signed-off-by: Pawel Moll <pawel.moll@st.com>

diff --git a/arch/sh/Kconfig b/arch/sh/Kconfig
index 98b247c..81c3bff 100644
--- a/arch/sh/Kconfig
+++ b/arch/sh/Kconfig
@@ -581,6 +581,13 @@ config SH_ST_MB562
 	  Select SH_ST_MB562 if your processor board is connected
 	  to this multi-audio-outputs board.
 
+config SH_ST_MB588
+	bool "mb588: NAND Flash STEM board"
+	depends on SH_ST_STEM
+	help
+	  Supports MB588 STEM board. See "arch/sh/boards/st/common/mb588.c"
+	  for configuration informations.
+
 endmenu
 
 source "arch/sh/boards/renesas/hs7751rvoip/Kconfig"
diff --git a/arch/sh/boards/st/common/Makefile b/arch/sh/boards/st/common/Makefile
index ac1fdfe..522ffa9 100644
--- a/arch/sh/boards/st/common/Makefile
+++ b/arch/sh/boards/st/common/Makefile
@@ -8,3 +8,4 @@ obj-$(CONFIG_SH_ST_EPLD) += epld.o
 obj-$(CONFIG_SH_ST_DB641) += db641.o
 obj-$(CONFIG_SH_ST_MB520) += mb520.o
 obj-$(CONFIG_SH_ST_MB562) += mb562.o
+obj-$(CONFIG_SH_ST_MB588) += mb588.o
diff --git a/arch/sh/boards/st/common/mb588.c b/arch/sh/boards/st/common/mb588.c
new file mode 100644
index 0000000..fe84b5a
--- /dev/null
+++ b/arch/sh/boards/st/common/mb588.c
@@ -0,0 +1,80 @@
+/*
+ * arch/sh/boards/st/common/mb588.c
+ *
+ * Copyright (C) 2007 STMicroelectronics Limited
+ * Author: Pawel MOLL <pawel.moll@st.com>
+ *
+ * May be copied or modified under the terms of the GNU General Public
+ * License.  See linux/COPYING for more information.
+ *
+ * STMicroelectronics NAND Flash STEM board
+ *
+ * This code assumes that STEM_notCS0 line is used (J1 = 1-2).
+ *
+ * J2 may be left totally unfitted.
+ *
+ * If J3 is closed NAND chip is write protected, so if you wish to modify
+ * its content...
+ *
+ * Some additional main board setup may be required to use proper CS signal
+ * signal - see "include/asm-sh/<board>/stem.h" for more information.
+ */
+
+#include <linux/init.h>
+#include <linux/platform_device.h>
+#include <linux/mtd/partitions.h>
+#include <linux/stm/soc.h>
+#include <linux/stm/emi.h>
+#include <asm/mach/stem.h>
+
+static struct mtd_partition nand_partitions[] = {
+	{
+		.name	= "NAND root",
+		.offset	= 0,
+		.size 	= 0x00800000
+	}, {
+		.name	= "NAND home",
+		.offset	= MTDPART_OFS_APPEND,
+		.size	= MTDPART_SIZ_FULL
+	},
+};
+
+static struct nand_config_data nand_config = {
+	.emi_bank		= STEM_CS0_BANK,
+	.emi_withinbankoffset	= STEM_CS0_OFFSET,
+
+	/* Timing data for ST-NAND512W3A2C */
+	.emi_timing_data = &(struct emi_timing_data) {
+		.rd_cycle_time	= 40,		 /* times in ns */
+		.rd_oee_start	= 0,
+		.rd_oee_end	= 10,
+		.rd_latchpoint	= 10,
+		.busreleasetime = 10,
+
+		.wr_cycle_time	= 40,
+		.wr_oee_start	= 0,
+		.wr_oee_end	= 10,
+	},
+
+	.chip_delay		= 20,
+	.mtd_parts		= nand_partitions,
+	.nr_parts		= ARRAY_SIZE(nand_partitions),
+	.rbn_port		= -1,
+	.rbn_pin		= -1,
+};
+
+static int __init mb588_init(void)
+{
+#if defined(CONFIG_CPU_SUBTYPE_STX7105)
+	stx7105_configure_nand(&nand_config);
+#elif defined(CONFIG_CPU_SUBTYPE_STX7111)
+	stx7111_configure_nand(&nand_config);
+#elif defined(CONFIG_CPU_SUBTYPE_STX7200)
+	stx7200_configure_nand(&nand_config);
+#else
+#	error Unsupported SOC.
+#endif
+	return 0;
+}
+arch_initcall(mb588_init);
+
diff --git a/arch/sh/boards/st/mb519/setup.c b/arch/sh/boards/st/mb519/setup.c
index 82517da..42b5164 100644
--- a/arch/sh/boards/st/mb519/setup.c
+++ b/arch/sh/boards/st/mb519/setup.c
@@ -174,42 +174,6 @@ static struct platform_device epld_device = {
 	},
 };
 
-static struct mtd_partition nand_partitions[] = {
-	{
-		.name	= "NAND root",
-		.offset	= 0,
-		.size 	= 0x00800000
-	}, {
-		.name	= "NAND home",
-		.offset	= MTDPART_OFS_APPEND,
-		.size	= MTDPART_SIZ_FULL
-	},
-};
-
-static struct nand_config_data mb519_nand_config = {
-	.emi_bank		= 1,
-	.emi_withinbankoffset	= 0,
-
-	/* Timing data for STEM Module MB588A (ST-NAND512W3A2C) */
-	.emi_timing_data = &(struct emi_timing_data) {
-		.rd_cycle_time	= 40,		 /* times in ns */
-		.rd_oee_start	= 0,
-		.rd_oee_end	= 10,
-		.rd_latchpoint	= 10,
-		.busreleasetime = 10,
-
-		.wr_cycle_time	= 40,
-		.wr_oee_start	= 0,
-		.wr_oee_end	= 10,
-	},
-
-	.chip_delay		= 20,
-	.mtd_parts		= nand_partitions,
-	.nr_parts		= ARRAY_SIZE(nand_partitions),
-	.rbn_port		= -1,
-	.rbn_pin		= -1,
-};
-
 static struct platform_device *mb519_devices[] __initdata = {
 	&epld_device,
 	&physmap_flash,
@@ -236,7 +200,6 @@ static int __init device_init(void)
 	stx7200_configure_ethernet(1, 0, 1, 1);
 #endif
 	stx7200_configure_lirc();
-//	stx7200_configure_nand(&mb519_nand_config);
 //	stx7200_configure_pata(1, ILC_IRQ(6));	/* irq_ilc_ext_in[2] */
 
 	return platform_add_devices(mb519_devices, ARRAY_SIZE(mb519_devices));
diff --git a/arch/sh/boards/st/mb671/setup.c b/arch/sh/boards/st/mb671/setup.c
index f8a54a7..489ec50 100644
--- a/arch/sh/boards/st/mb671/setup.c
+++ b/arch/sh/boards/st/mb671/setup.c
@@ -173,42 +173,6 @@ static struct platform_device epld_device = {
 	},
 };
 
-static struct mtd_partition nand_partitions[] = {
-	{
-		.name	= "NAND root",
-		.offset	= 0,
-		.size 	= 0x00800000
-	}, {
-		.name	= "NAND home",
-		.offset	= MTDPART_OFS_APPEND,
-		.size	= MTDPART_SIZ_FULL
-	},
-};
-
-static struct nand_config_data mb671_nand_config = {
-	.emi_bank		= 1,
-	.emi_withinbankoffset	= 0,
-
-	/* Timing data for STEM Module MB588A (ST-NAND512W3A2C) */
-	.emi_timing_data = &(struct emi_timing_data) {
-		.rd_cycle_time	= 40,		 /* times in ns */
-		.rd_oee_start	= 0,
-		.rd_oee_end	= 10,
-		.rd_latchpoint	= 10,
-		.busreleasetime = 10,
-
-		.wr_cycle_time	= 40,
-		.wr_oee_start	= 0,
-		.wr_oee_end	= 10,
-	},
-
-	.chip_delay		= 20,
-	.mtd_parts		= nand_partitions,
-	.nr_parts		= ARRAY_SIZE(nand_partitions),
-	.rbn_port		= -1,
-	.rbn_pin		= -1,
-};
-
 static struct platform_device *mb671_devices[] __initdata = {
 	&epld_device,
 	&physmap_flash,
@@ -245,7 +209,6 @@ static int __init device_init(void)
 	stx7200_configure_ethernet(0, 0, 1, 0);
 //	stx7200_configure_ethernet(1, 0, 1, 1);
 	stx7200_configure_lirc();
-//	stx7200_configure_nand(&mb671_nand_config);
 
 	return platform_add_devices(mb671_devices, ARRAY_SIZE(mb671_devices));
 }
