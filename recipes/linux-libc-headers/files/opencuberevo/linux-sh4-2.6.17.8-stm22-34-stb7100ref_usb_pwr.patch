Until this patch was added, we relied on the stb710x ref board to power
up with the USB power distribution chip enabled. It was not activly driven
by the 710x at all. However rev C of the board changed the power on state,
so we now have to drive it, but because the enables signal polarity doesn't
match that generated by the 710x USB hardware, we have to drive it as a PIO
pin.

Signed-off-by: Stuart Menefy <stuart.menefy@st.com>

Index: linux-2.6.17/arch/sh/boards/st/stb7100ref/setup.c
===================================================================
--- linux-2.6.17.orig/arch/sh/boards/st/stb7100ref/setup.c
+++ linux-2.6.17/arch/sh/boards/st/stb7100ref/setup.c
@@ -67,7 +67,7 @@ void __init platform_setup(void)
 {
 	unsigned long sysconf;
 	unsigned long chip_revision, chip_7109;
-	static struct stpio_pin *ethreset;
+	static struct stpio_pin *ethreset,*usbpower;
 
 	printk("STMicroelectronics STb7100 Reference board initialisation\n");
 
@@ -105,6 +105,31 @@ void __init platform_setup(void)
 	sysconf = ctrl_inl(SYSCONF_SYS_CFG(8));
 	ctrl_outl(sysconf | 0x2, SYSCONF_SYS_CFG(8));
 
+	/*
+	 * There have been two changes to the USB power enable signal:
+	 *
+	 * - 7100 upto and including cut 3.0 and 7109 1.0 generated an
+	 *   active high enables signal. From 7100 cut 3.1 and 7109 cut 2.0
+	 *   the signal changed to active low.
+	 *
+	 * - The 710x ref board (mb442) has always used power distribution
+	 *   chips which have active high enables signals (on rev A and B
+	 *   this was a TI TPS2052, rev C used the ST equivalent a ST2052).
+	 *   However rev A and B had a pull up on the enables signal, while
+	 *   rev C changed this to a pull down.
+	 *
+	 * The net effect of all this is that the easiest way to drive
+	 * this signal is ignore the USB hardware and drive it as a PIO
+	 * pin.
+	 *
+	 * (Note the USB over current input on the 710x changed from active
+	 * high to low at the same cuts, but board revs A and B had a resistor
+	 * option to select an inverted output from the TPS2052, so no
+	 * software work around is required.)
+	 */
+	usbpower=stpio_request_pin(5,7, "USBPWR", STPIO_OUT);
+	stpio_set_pin(usbpower, 1);
+
 	/* Currently all STB1 chips have problems with the sleep instruction,
 	 * so disable it here.
 	 */
