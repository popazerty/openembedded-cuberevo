gcc 4 for sh changes the names of some compiler intrinsic functions and
adds some additional ones. This patch adds the new ones.

Also gcc 4 will normally replace sprintf(dst, "%s", str) with strcpy(dst, str).
However in the kernel sh always inlines strcpy, so there is no real function
to call. Adding -ffreestanding to the compile command line prevents this
replacement.

This resolves: https://bugzilla.stlinux.com/show_bug.cgi?id=843

Signed-off-by: Stuart Menefy <stuart.menefy@st.com>
Index: linux-2.6.17/arch/sh/kernel/sh_ksyms.c
===================================================================
--- linux-2.6.17.orig/arch/sh/kernel/sh_ksyms.c
+++ linux-2.6.17/arch/sh/kernel/sh_ksyms.c
@@ -70,21 +70,36 @@ DECLARE_EXPORT(__udivsi3);
 DECLARE_EXPORT(__udivdi3);
 DECLARE_EXPORT(__sdivsi3);
 DECLARE_EXPORT(__divdi3);
-DECLARE_EXPORT(__sdivsi3_i4i);
 DECLARE_EXPORT(__ashrdi3);
 DECLARE_EXPORT(__ashldi3);
 DECLARE_EXPORT(__lshrdi3);
-DECLARE_EXPORT(__movstr);
-
-EXPORT_SYMBOL(strcpy);
 
 #ifdef CONFIG_CPU_SH4
+#if __GNUC__ == 4
+DECLARE_EXPORT(__movmem_i4_even);
+DECLARE_EXPORT(__movmem_i4_odd);
+DECLARE_EXPORT(__movmemSI12_i4);
+DECLARE_EXPORT(__sdivsi3_i4i);
+DECLARE_EXPORT(__udiv_qrnnd_16);
+DECLARE_EXPORT(__udivsi3_i4i);
+#else
+/* GCC 3.x */
 DECLARE_EXPORT(__movstr_i4_even);
 DECLARE_EXPORT(__movstr_i4_odd);
-DECLARE_EXPORT(__movmem_i4_even); /* movstr became movmem in gcc-4.1 */
-DECLARE_EXPORT(__movmem_i4_odd);
 DECLARE_EXPORT(__movstrSI12_i4);
+#endif
+#else
+#if __GNUC__ == 4
+DECLARE_EXPORT(__movmem);
+#else
+DECLARE_EXPORT(__movstr);
+#endif
+#endif
+
+/* If we remove -ffreestanding from Makefile, then this needs to be exported */
+/* EXPORT_SYMBOL(strcpy); */
 
+#ifdef CONFIG_CPU_SH4
 /* needed by some modules */
 EXPORT_SYMBOL(flush_cache_all);
 EXPORT_SYMBOL(flush_cache_range);
Index: linux-2.6.17/arch/sh/Makefile
===================================================================
--- linux-2.6.17.orig/arch/sh/Makefile
+++ linux-2.6.17/arch/sh/Makefile
@@ -36,6 +36,10 @@ endif
 
 cflags-y	+= $(call as-option,-Wa$(comma)-isa=$(isa-y),)
 
+# include/asm-sh/string.h defines strcpy as inline, so we never have a
+# real strcpy. This prevents gcc assuming it can call strcpy directly.
+cflags-y				+= -ffreestanding
+
 cflags-$(CONFIG_CPU_SH2)		+= -m2
 cflags-$(CONFIG_CPU_SH3)		+= -m3
 cflags-$(CONFIG_CPU_SH4)		+= -m4 \
