From efb8a524daae7e1279d111081f94af5b273f9055 Mon Sep 17 00:00:00 2001
From: Francesco M. Virlinzi <francesco.virlinzi@st.com>
Date: Wed, 18 Feb 2009 08:46:18 +0100
Subject: [PATCH] stm_pm: Improve PM SoC platform implementation

This patch introduces safer polling of device states during and
after power state changes.

Signed-off-by: Francesco M. Virlinzi <francesco.virlinzi@st.com>
---
 arch/sh/kernel/cpu/sh4/platform-pm-stb7100.c |   10 +++++++---
 arch/sh/kernel/cpu/sh4/platform-pm-stx5197.c |   22 ++++++++++++++--------
 arch/sh/kernel/cpu/sh4/platform-pm-stx7105.c |   19 ++++++++++++++-----
 arch/sh/kernel/cpu/sh4/platform-pm-stx7111.c |   21 ++++++++++++++-------
 arch/sh/kernel/cpu/sh4/platform-pm-stx7141.c |   21 +++++++++++++++------
 arch/sh/kernel/cpu/sh4/platform-pm-stx7200.c |   23 ++++++++++++++---------
 6 files changed, 78 insertions(+), 38 deletions(-)

diff --git a/arch/sh/kernel/cpu/sh4/platform-pm-stb7100.c b/arch/sh/kernel/cpu/sh4/platform-pm-stb7100.c
index fef4550..65cb8a9 100644
--- a/arch/sh/kernel/cpu/sh4/platform-pm-stb7100.c
+++ b/arch/sh/kernel/cpu/sh4/platform-pm-stb7100.c
@@ -67,12 +67,16 @@ static int
 emi_pwd_dwn_ack(struct platform_device *pdev, int host_phy, int ack)
 {
 	static struct sysconf_field *sc;
+	int i;
 
 	if (!sc)
 		sc = sysconf_claim(SYS_STA, 15, 0, 0, "emi pwr ack");
-	mdelay(10);
-/*	while (sysconf_read(sc) != ack);*/
-	return 0;
+	for (i = 5; i; --i) {
+		if (sysconf_read(sc) == ack)
+			return 0;
+		mdelay(10);
+	}
+	return -EINVAL;
 }
 
 static struct platform_device_pm stx710x_pm_devices[] = {
diff --git a/arch/sh/kernel/cpu/sh4/platform-pm-stx5197.c b/arch/sh/kernel/cpu/sh4/platform-pm-stx5197.c
index 8871659..b37e7b1 100644
--- a/arch/sh/kernel/cpu/sh4/platform-pm-stx5197.c
+++ b/arch/sh/kernel/cpu/sh4/platform-pm-stx5197.c
@@ -14,14 +14,16 @@ static int
 usb_pwr_ack(struct platform_device *dev, int host_phy, int on)
 {
 	static struct sysconf_field *sc;
-
+	int i;
 	if (!sc)
 		sc = sysconf_claim(SYS_STA, CFG_MONITOR_E, 30, 30,
 			"usb pwd ack");
-
-	while (sysconf_read(sc) != on);
-
-	return 0;
+	for (i = 5; i; --i) {
+		if (sysconf_read(sc) == on)
+			return 0;
+		mdelay(10);
+	}
+	return -EINVAL;
 }
 
 static int
@@ -72,12 +74,16 @@ static int
 emi_pwr_dwn_ack(struct platform_device *dev, int host_phy, int ack)
 {
 	static struct sysconf_field *sc;
+	int i;
 	if (!sc)
 		sc = sysconf_claim(SYS_DEV, CFG_MONITOR_J, 20, 20,
 			"emi pwr ack");
-/*	while (sysconf_read(sc) != ack);*/
-	mdelay(10);
-	return 0;
+	for (i = 5; i; --i) {
+		if (sysconf_read(sc) == ack)
+			return 0;
+		mdelay(10);
+	}
+	return -EINVAL;
 }
 
 
diff --git a/arch/sh/kernel/cpu/sh4/platform-pm-stx7105.c b/arch/sh/kernel/cpu/sh4/platform-pm-stx7105.c
index a004199..70ad555 100644
--- a/arch/sh/kernel/cpu/sh4/platform-pm-stx7105.c
+++ b/arch/sh/kernel/cpu/sh4/platform-pm-stx7105.c
@@ -25,11 +25,15 @@ static int
 emi_pwr_dwn_ack(struct platform_device *dev, int host_phy, int ack)
 {
 	static struct sysconf_field *sc;
+	int i;
 	if (!sc)
 		sc = sysconf_claim(SYS_STA, 15, 1, 1, "emi pwr ack");
-/*	while (sysconf_read(sc) != ack);*/
-	mdelay(50);
-	return 0;
+	for (i = 5; i; --i) {
+		if (sysconf_read(sc) == ack)
+			return 0;
+		mdelay(10);
+	}
+	return -EINVAL;
 }
 
 static int
@@ -54,11 +58,16 @@ usb_pwr_ack(struct platform_device *dev, int host_phy, int ack)
 {
 	static struct sysconf_field *sc[2];
 	int port = dev->id;
+	int i;
 	if (!sc[port])
 		sc[port] = sysconf_claim(SYS_STA, 15, 4 + port, 4 + port, "USB");
 
-	while (sysconf_read(sc[port]) != ack);
-	return 0;
+	for (i = 5; i; --i) {
+		if (sysconf_read(sc[port]) == ack)
+			return 0;
+		mdelay(10);
+	}
+	return -EINVAL;
 }
 
 static struct platform_device_pm stx7105_pm_devices[] = {
diff --git a/arch/sh/kernel/cpu/sh4/platform-pm-stx7111.c b/arch/sh/kernel/cpu/sh4/platform-pm-stx7111.c
index b5aeef2..2981f66 100644
--- a/arch/sh/kernel/cpu/sh4/platform-pm-stx7111.c
+++ b/arch/sh/kernel/cpu/sh4/platform-pm-stx7111.c
@@ -14,13 +14,16 @@ static int
 usb_pwr_ack(struct platform_device *dev, int host_phy, int on)
 {
 	static struct sysconf_field *sc;
+	int i;
 
 	if (!sc)
 		sc = sysconf_claim(SYS_STA, 15, 4, 4, "USB_PW_ACK");
-
-	while (sysconf_read(sc) != on);
-
-	return 0;
+	for (i = 5; i; --i) {
+		if (sysconf_read(sc) == on)
+			return 0;
+		mdelay(10);
+	}
+	return -EINVAL;
 }
 
 static int
@@ -72,11 +75,15 @@ static int
 emi_pwr_dwn_ack(struct platform_device *dev, int host_phy, int ack)
 {
 	static struct sysconf_field *sc;
+	int i;
 	if (!sc)
 		sc = sysconf_claim(SYS_STA, 15, 1, 1, "emi pwr ack");
-/*	while (sysconf_read(sc) != ack);*/
-	mdelay(10);
-	return 0;
+	for (i = 5; i; --i) {
+		if (sysconf_read(sc) == ack)
+			return 0;
+		mdelay(10);
+	}
+	return -EINVAL;
 }
 
 
diff --git a/arch/sh/kernel/cpu/sh4/platform-pm-stx7141.c b/arch/sh/kernel/cpu/sh4/platform-pm-stx7141.c
index d030177..2d56c35 100644
--- a/arch/sh/kernel/cpu/sh4/platform-pm-stx7141.c
+++ b/arch/sh/kernel/cpu/sh4/platform-pm-stx7141.c
@@ -28,12 +28,17 @@ usb_pwr_ack(struct platform_device *dev, int host_phy, int ack)
 {
 	static struct sysconf *sc[4];
 	int port = dev->id;
+	int i;
 
 	if (!sc[port])
 		sysconf_claim(SYS_STA, 15, 7+port, 7+port, "USB");
-	do {
-	} while (sysconf_read(sc) != ack);
-	return 0;
+
+	for (i = 5; i; --i) {
+                if (sysconf_read(sc[port]) == ack)
+                        return 0;
+                mdelay(10);
+        }
+	return -EINVAL;
 }
 
 static int
@@ -50,11 +55,15 @@ static int
 emi_pwr_dwn_ack(struct platform_device *dev, int host_phy, int ack)
 {
 	static struct sysconf_field *sc;
+	int i;
 	if (!sc)
 		sc = sysconf_claim(SYS_STA, 15, 1, 1, "emi pwr ack");
-/*	while (sysconf_read(sc) != ack);*/
-	mdelay(10);
-	return 0;
+	for (i = 5; i; --i) {
+		if (sysconf_read(sc) == ack)
+			return 0;
+		mdelay(10);
+	}
+	return -EINVAL;
 }
 
 static struct platform_device_pm stx7141_pm_devices[] = {
diff --git a/arch/sh/kernel/cpu/sh4/platform-pm-stx7200.c b/arch/sh/kernel/cpu/sh4/platform-pm-stx7200.c
index 0f7ba80..6fcff78 100644
--- a/arch/sh/kernel/cpu/sh4/platform-pm-stx7200.c
+++ b/arch/sh/kernel/cpu/sh4/platform-pm-stx7200.c
@@ -20,9 +20,7 @@ usb_pwr_dwn(struct platform_device *pdev, int host_phy, int pwd)
 	if (!sc[port])
 		sc[port] = sysconf_claim(SYS_CFG, 22, 3+port, 3+port,
 				"usb pwr");
-
 	sysconf_write(sc[port], (pwd ? 1 : 0));
-
 	return 0;
 }
 
@@ -31,13 +29,16 @@ usb_pwr_ack(struct platform_device *pdev, int host_phy, int ack)
 {
 	static struct sysconf_field *sc[3];
 	int port = pdev->id;
+	int i;
 	if (!sc[port])
 		sc[port] = sysconf_claim(SYS_STA, 13, 2+port, 2+port,
 					"usb ack");
-
-	while (sysconf_read(sc[port]) != ack);
-
-	return 0;
+	for (i = 5; i; --i) {
+		if (sysconf_read(sc[port]) == ack)
+			return 0;
+		mdelay(10);
+	}
+	return -EINVAL;
 }
 
 static int
@@ -62,11 +63,15 @@ static int
 emi_pwd_dwn_ack(struct platform_device *pdev, int host_phy, int ack)
 {
 	static struct sysconf_field *sc;
+	int i;
 	if (!sc)
 		sc = sysconf_claim(SYS_STA, 8, 1, 1, "emi pwr ack");
-/*	while (sysconf_read(sc) != ack);*/
-	mdelay(50);
-	return 0;
+	for (i = 5; i; --i) {
+		if (sysconf_read(sc) == ack)
+			return 0;
+		mdelay(10);
+	}
+	return -EINVAL;
 }
 
 static struct platform_device_pm stx7200_pm_devices[] = {
-- 
1.5.6.3

