From c59639e4a056778830c0f39da38d26205a520fec Mon Sep 17 00:00:00 2001
From: Jonathan FROSDICK <jon.frosdick@st.com>
Date: Mon, 20 Jul 2009 16:00:10 +0100
Subject: [PATCH] sh_stm: handle serial flash m25p80 devices which are write protected

Signed-off-by: Jon Frosdick <jon.frosdick@st.com>
Signed-off-by: Stuart Menefy <stuart.menefy@st.com>
---
 drivers/mtd/devices/m25p80.c |   19 +++++++++++++++++++
 1 files changed, 19 insertions(+), 0 deletions(-)

diff --git a/drivers/mtd/devices/m25p80.c b/drivers/mtd/devices/m25p80.c
index 78c2511..c9d4cc2 100644
--- a/drivers/mtd/devices/m25p80.c
+++ b/drivers/mtd/devices/m25p80.c
@@ -37,6 +37,7 @@
 /* Flash opcodes. */
 #define	OPCODE_WREN		6	/* Write enable */
 #define	OPCODE_RDSR		5	/* Read status register */
+#define	OPCODE_WRSR		1	/* Write status register */
 #define	OPCODE_READ		3	/* Read data bytes */
 #define	OPCODE_PP		2	/* Page program */
 #define	OPCODE_SE		0xd8	/* Sector erase */
@@ -104,6 +105,17 @@ static int read_sr(struct m25p *flash)
 	return val;
 }
 
+/*
+ * Write status register 1 byte
+ * Returns negative if error occurred.
+ */
+static int write_sr(struct m25p *flash, u8 val)
+{
+	flash->command[0] = OPCODE_WRSR;
+	flash->command[1] = val;
+
+	return spi_write(flash->spi, flash->command, 2);
+}
 
 /*
  * Set write enable latch with Write Enable command.
@@ -459,6 +471,13 @@ static int __devinit m25p_probe(struct spi_device *spi)
 	init_MUTEX(&flash->lock);
 	dev_set_drvdata(&spi->dev, flash);
 
+	/*
+	* Some serial flash devices tend to power up
+	* with the software protection bits set
+	*/
+	write_enable(flash);
+	write_sr(flash, 0);
+
 	if (data->name)
 		flash->mtd.name = data->name;
 	else
-- 
1.6.0.6

