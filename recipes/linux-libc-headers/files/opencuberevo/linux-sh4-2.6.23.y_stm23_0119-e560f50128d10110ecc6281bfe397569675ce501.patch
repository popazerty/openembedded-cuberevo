From e560f50128d10110ecc6281bfe397569675ce501 Mon Sep 17 00:00:00 2001
From: Angus CLARK <angus.clark@st.com>
Date: Wed, 13 May 2009 11:41:32 +0100
Subject: [PATCH] stm_nand_flex: Improved CSn de-assert

Force CSn de-assert after each read/write rather than at the end of each
page.  Avoids the need to disable IRQs during access.

Signed-off-by: Angus Clark <angus.clark@st.com>
---
 drivers/mtd/nand/stm_nand_flex.c  |   16 +++++-----------
 drivers/mtd/nand/stm_nandc_regs.h |    1 +
 2 files changed, 6 insertions(+), 11 deletions(-)

diff --git a/drivers/mtd/nand/stm_nand_flex.c b/drivers/mtd/nand/stm_nand_flex.c
index 180c3e3..297c46d 100644
--- a/drivers/mtd/nand/stm_nand_flex.c
+++ b/drivers/mtd/nand/stm_nand_flex.c
@@ -197,7 +197,8 @@ static void flex_read_buf(struct mtd_info *mtd, uint8_t *buf, int len)
 	p = ((uint32_t)buf & 0x3) ? flex.buf : buf;
 
 	/* Switch to 4-byte reads (required for ECC) */
-	flex_writereg(FLX_DATA_CFG_BEAT_4, EMINAND_FLEX_DATAREAD_CONFIG);
+	flex_writereg(FLX_DATA_CFG_BEAT_4 | FLX_DATA_CFG_CSN_STATUS,
+		      EMINAND_FLEX_DATAREAD_CONFIG);
 
 	readsl(flex.base_addr + EMINAND_FLEX_DATA, p, len/4);
 
@@ -208,10 +209,6 @@ static void flex_read_buf(struct mtd_info *mtd, uint8_t *buf, int len)
 	flex_writereg(FLX_DATA_CFG_BEAT_1 | FLX_DATA_CFG_CSN_STATUS,
 		      EMINAND_FLEX_DATAREAD_CONFIG);
 
-	/* Deassert CSn, allow access to other EMI devices */
-	reg = flex_readreg(EMINAND_FLEXMODE_CONFIG);
-	reg |= (0x1 << 4);
-	flex_writereg(reg, EMINAND_FLEXMODE_CONFIG);
 }
 
 static void flex_write_buf(struct mtd_info *mtd, const uint8_t *buf, int len)
@@ -227,8 +224,9 @@ static void flex_write_buf(struct mtd_info *mtd, const uint8_t *buf, int len)
 		p = buf;
 	}
 
-	/* Switch to 4-byte reads (required for ECC), and wait RBn */
-	flex_writereg(FLX_DATA_CFG_BEAT_4, EMINAND_FLEX_DATAWRITE_CONFIG);
+	/* Switch to 4-byte reads (required for ECC) */
+	flex_writereg(FLX_DATA_CFG_BEAT_4 | FLX_DATA_CFG_CSN_STATUS,
+		      EMINAND_FLEX_DATAWRITE_CONFIG);
 
 	writesl(flex.base_addr + EMINAND_FLEX_DATA, p, len/4);
 
@@ -236,10 +234,6 @@ static void flex_write_buf(struct mtd_info *mtd, const uint8_t *buf, int len)
 	flex_writereg(FLX_DATA_CFG_BEAT_1 | FLX_DATA_CFG_CSN_STATUS,
 		      EMINAND_FLEX_DATAWRITE_CONFIG);
 
-	/* Deassert CSn, allow access to other EMI devices */
-	reg = flex_readreg(EMINAND_FLEXMODE_CONFIG);
-	reg |= (0x1 << 4);
-	flex_writereg(reg, EMINAND_FLEXMODE_CONFIG);
 }
 
 #ifdef CONFIG_STM_NAND_FLEX_BOOTMODESUPPORT
diff --git a/drivers/mtd/nand/stm_nandc_regs.h b/drivers/mtd/nand/stm_nandc_regs.h
index 7da22c9..ddd4123 100644
--- a/drivers/mtd/nand/stm_nandc_regs.h
+++ b/drivers/mtd/nand/stm_nandc_regs.h
@@ -85,6 +85,7 @@
 #define FLX_CMD_REG_CSN_STATUS			(0x1 << 31)
 
 /* FLEX: Data Config fields */
+#define FLX_DATA_CFG_RBN			(0x1 << 27)
 #define FLX_DATA_CFG_BEAT_1			(0x1 << 28)
 #define FLX_DATA_CFG_BEAT_2			(0x2 << 28)
 #define FLX_DATA_CFG_BEAT_3			(0x3 << 28)
-- 
1.6.0.6

