From 411f36cd2a7b05c98a1686227aef218144bbd4dc Mon Sep 17 00:00:00 2001
From: Giuseppe Condorelli <giuseppe.condorelli@st.com>
Date: Wed, 11 Feb 2009 13:58:40 +0000
Subject: [PATCH] rt73_wireless: boottime firmware loading

A new firwmare loading strategy is implemented allowing a user to choose
to include RT73 firmware directly with the kernel .text section so that it
is available at boot.

Enable the kernel configuration option "Rt73 firmware loaded inside kernel"
and put the rt73.bin firmware under the usr directory of the kernel tree.

With this patch it is now possible to boot a kernel with a wireless device
plugged on usb.  Upon USB unloading and reloading, the standard firmware
(in /lib/firmware) will be used.

Signed-off-by: Giuseppe Condorelli <giuseppe.condorelli@st.com>
---
 arch/sh/kernel/vmlinux.lds.S          |    7 ++++
 drivers/net/wireless/rt73/Kconfig     |   13 ++++++++
 drivers/net/wireless/rt73/rt73.h      |    1 +
 drivers/net/wireless/rt73/rtmp_init.c |   51 +++++++++++++++++++++++++++++++--
 usr/Makefile                          |    2 +
 usr/initwireless_data.S               |    2 +
 6 files changed, 73 insertions(+), 3 deletions(-)
 create mode 100644 usr/initwireless_data.S

diff --git a/arch/sh/kernel/vmlinux.lds.S b/arch/sh/kernel/vmlinux.lds.S
index 4dce4fc..c6707ed 100644
--- a/arch/sh/kernel/vmlinux.lds.S
+++ b/arch/sh/kernel/vmlinux.lds.S
@@ -42,6 +42,13 @@ SECTIONS
   __ex_table : { *(__ex_table) }
   __stop___ex_table = .;
 
+#ifdef CONFIG_WIRELESS_RT73_FRMW
+  . = ALIGN(PAGE_SIZE);
+
+  __initrt73frmw_start = .;
+  .init.wireless : { *(.init.wireless) }
+  __initrt73frmw_end = .;
+#endif
   _etext = .;			/* End of text section */
 
   NOTES
diff --git a/drivers/net/wireless/rt73/Kconfig b/drivers/net/wireless/rt73/Kconfig
index 0935a2d..aca9bcd 100644
--- a/drivers/net/wireless/rt73/Kconfig
+++ b/drivers/net/wireless/rt73/Kconfig
@@ -37,3 +37,16 @@ config STM_RT73_WIRELESS
 	
 	To compile this driver as a module, choose M here: the module will be called 
 	rt73.ko.
+
+config WIRELESS_RT73_FRMW
+	bool "Rt73 firmware loaded inside kernel"
+	depends on STM_RT73_WIRELESS
+	default n
+	---help---
+	Enabling this kernel option you will be able to load rt73 firmware
+	directly from kernel. In this case you have to put your rt73.bin
+	file under usr kernel directory.
+	To note that once on board, for each plug/unplug operation on your
+	physical wireless device, the original rt73.bin firmware (/lib/firmware)
+	will be used, so is mandatory to maintain it under the specified
+	directory.
diff --git a/drivers/net/wireless/rt73/rt73.h b/drivers/net/wireless/rt73/rt73.h
index 9661179..2e97b22 100644
--- a/drivers/net/wireless/rt73/rt73.h
+++ b/drivers/net/wireless/rt73/rt73.h
@@ -43,6 +43,7 @@
 // 8051 firmware image - base address = 0x4000
 #define FIRMWARE_IMAGE_BASE     0x800
 #define FIRMWARE_IMAGE_SIZE	2048	// 2k byte
+#define MAX_FIRMWARE_IMAGE_SIZE        2048
 
 //
 // Security key table memory, base address = 0x1000
diff --git a/drivers/net/wireless/rt73/rtmp_init.c b/drivers/net/wireless/rt73/rtmp_init.c
index c1798e3..b90f4d3 100644
--- a/drivers/net/wireless/rt73/rtmp_init.c
+++ b/drivers/net/wireless/rt73/rtmp_init.c
@@ -35,6 +35,15 @@
 
 #include	"rt_config.h"
 
+#ifdef CONFIG_WIRELESS_RT73_FRMW
+extern char __initrt73frmw_start[];
+extern char __initrt73frmw_end[];
+#define FIRMWAREIMAGE_LENGTH    (__initrt73frmw_end - __initrt73frmw_start)
+#else
+char *__initrt73frmw_start = NULL;
+#define FIRMWAREIMAGE_LENGTH MAX_FIRMWARE_IMAGE_SIZE
+#endif
+
 
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(2,5,0)
 #define RT_USB_ALLOC_URB(iso)	usb_alloc_urb(iso, GFP_KERNEL);
@@ -1636,7 +1645,9 @@ INT LoadFirmware (PRTMP_ADAPTER pAd, char *firmName)
 	USHORT i, loaded = 0;
 	ULONG *reg = kzalloc(sizeof(ULONG), GFP_KERNEL);
 	u16 crc = 0;
-	INT status;
+	INT status, ret;
+	unsigned char *pFirmwareImage;
+	static int booted = 0;
 #define BUFFERED_COPY
 #ifdef BUFFERED_COPY
 	u8 buf[64];
@@ -1650,8 +1661,42 @@ INT LoadFirmware (PRTMP_ADAPTER pAd, char *firmName)
 		return -ENOMEM;
 	}
 
-	// Access firmware file
-	if ((status = request_firmware(&fw_entry, firmName, udevice))) {
+	if ((__initrt73frmw_start != NULL) && (!booted)) {
+		pFirmwareImage = kmalloc(MAX_FIRMWARE_IMAGE_SIZE,
+				MEM_ALLOC_FLAG);
+		if (pFirmwareImage == NULL) {
+			DBGPRINT(RT_DEBUG_ERROR, "couldn't allocate memory\n");
+			return -ENOMEM;
+		}
+		memset(pFirmwareImage, 0x00, MAX_FIRMWARE_IMAGE_SIZE);
+
+		memcpy(pFirmwareImage, __initrt73frmw_start,
+			FIRMWAREIMAGE_LENGTH);
+		for (i = 0; i < FIRMWAREIMAGE_LENGTH; i = i + 4) {
+			ret = RTUSBMultiWrite(pAd, FIRMWARE_IMAGE_BASE + i,
+						pFirmwareImage + i, 4);
+			if (ret < 0) {
+				status = NDIS_STATUS_FAILURE;
+				break;
+			}
+		}
+		if (pFirmwareImage != NULL)
+			kfree(pFirmwareImage);
+		// Send 'run firmware' request to device
+		if ((status = RTUSBFirmwareRun(pAd)) < 0) {
+			KPRINT(KERN_ERR, "Device refuses to run firmware\n");
+			return status;
+		}
+		// Reset LED
+		RTMPSetLED(pAd, LED_LINK_DOWN);
+		// Firmware loaded ok
+		OPSTATUS_SET_FLAG (pAd, fOP_STATUS_FIRMWARE_LOAD );
+		status = NDIS_STATUS_SUCCESS; // change to success
+		booted = 1;
+		DBGPRINT(RT_DEBUG_TRACE, "<-- LoadFirmware (status: %d, loaded:"
+				 "%d)\n", status, loaded);
+		return status;
+	} else if ((status = request_firmware(&fw_entry, firmName, udevice))) {
 		KPRINT(KERN_ERR, "Failed to request_firmware. "
 			"Check your firmware file location\n");
 		goto fw_error;
diff --git a/usr/Makefile b/usr/Makefile
index 201f27f..ed347ea 100644
--- a/usr/Makefile
+++ b/usr/Makefile
@@ -8,11 +8,13 @@ PHONY += klibcdirs
 
 # Generate builtin.o based on initramfs_data.o
 obj-$(CONFIG_BLK_DEV_INITRD) := initramfs_data.o
+obj-$(CONFIG_WIRELESS_RT73_FRMW) += initwireless_data.o
 
 # initramfs_data.o contains the initramfs_data.cpio.gz image.
 # The image is included using .incbin, a dependency which is not
 # tracked automatically.
 $(obj)/initramfs_data.o: $(obj)/initramfs_data.cpio.gz FORCE
+$(obj)/initwireless_data.o: $(obj)/rt73.bin FORCE
 
 #####
 # Generate the initramfs cpio archive
diff --git a/usr/initwireless_data.S b/usr/initwireless_data.S
new file mode 100644
index 0000000..01244ce
--- /dev/null
+++ b/usr/initwireless_data.S
@@ -0,0 +1,2 @@
+.section .init.wireless,"a"
+.incbin "usr/rt73.bin"
-- 
1.5.6.3

