From dc0de827189232f631504b1f820d3d2590fa599f Mon Sep 17 00:00:00 2001
From: Giuseppe CAVALLARO <peppe.cavallaro@st.com>
Date: Mon, 13 Jul 2009 08:40:27 +0200
Subject: [PATCH] tiny-linux: configurable ethtool support

Now It is possible to disable ethtool support.
On the target, ethtool command will fail with the following error:

 $ ethtool -S eth0
 Cannot get driver information: Invalid argument

Signed-off-by: Giuseppe Cavallaro <peppe.cavallaro@st.com>
---
 include/linux/ethtool.h |   18 ++++++++++++++++++
 init/Kconfig            |    7 +++++++
 net/core/Makefile       |    3 ++-
 net/core/dev.c          |    4 ++++
 4 files changed, 31 insertions(+), 1 deletions(-)

diff --git a/include/linux/ethtool.h b/include/linux/ethtool.h
index e91e3db..2f17fe0 100644
--- a/include/linux/ethtool.h
+++ b/include/linux/ethtool.h
@@ -261,6 +261,7 @@ struct ethtool_perm_addr {
 
 struct net_device;
 
+#ifdef CONFIG_ETHTOOL
 /* Some generic methods drivers may use in their ethtool_ops */
 u32 ethtool_op_get_link(struct net_device *dev);
 u32 ethtool_op_get_tx_csum(struct net_device *dev);
@@ -273,6 +274,23 @@ u32 ethtool_op_get_tso(struct net_device *dev);
 int ethtool_op_set_tso(struct net_device *dev, u32 data);
 u32 ethtool_op_get_ufo(struct net_device *dev);
 int ethtool_op_set_ufo(struct net_device *dev, u32 data);
+#else
+static inline u32 ethtool_noop1(struct net_device *dev) { return 0; }
+static inline int ethtool_noop2(struct net_device *dev, u32 data) { return 0; }
+static inline int ethtool_noop3(struct net_device *dev,
+		struct ethtool_perm_addr *addr, u32 data) { return 0; }
+#define ethtool_op_get_link ethtool_noop1
+#define ethtool_op_get_tx_csum ethtool_noop1
+#define ethtool_op_set_tx_csum ethtool_noop2
+#define ethtool_op_set_tx_hw_csum ethtool_noop2
+#define ethtool_op_get_sg ethtool_noop1
+#define ethtool_op_set_sg ethtool_noop2
+#define ethtool_op_get_tso ethtool_noop1
+#define ethtool_op_set_tso ethtool_noop2
+#define ethtool_op_get_perm_addr ethtool_noop3
+#define ethtool_op_get_ufo ethtool_noop1
+#define ethtool_op_set_ufo ethtool_noop2
+#endif
 
 /**
  * &ethtool_ops - Alter and report network device settings
diff --git a/init/Kconfig b/init/Kconfig
index 3fd3b83..749d013 100644
--- a/init/Kconfig
+++ b/init/Kconfig
@@ -498,6 +498,13 @@ config NET_SMALL
 	help
 	  This reduces the size of miscellaneous networking data structures.
           Currently a placeholder.
+config ETHTOOL
+	depends NET
+	default y
+	 bool "Enable ethtool support" if EMBEDDED
+	 help
+	 Disabling this option removes support for configuring
+	 ethernet device features via ethtool. Saves about 6k.
 
 config FUTEX
 	bool "Enable futex support" if EMBEDDED
diff --git a/net/core/Makefile b/net/core/Makefile
index 4751613..53ed64c 100644
--- a/net/core/Makefile
+++ b/net/core/Makefile
@@ -7,10 +7,11 @@ obj-y := sock.o request_sock.o skbuff.o iovec.o datagram.o stream.o scm.o \
 
 obj-$(CONFIG_SYSCTL) += sysctl_net_core.o
 
-obj-y		     += dev.o ethtool.o dev_mcast.o dst.o netevent.o \
+obj-y		     += dev.o dev_mcast.o dst.o netevent.o \
 			neighbour.o rtnetlink.o utils.o link_watch.o filter.o
 
 obj-$(CONFIG_XFRM) += flow.o
+obj-$(CONFIG_ETHTOOL) += ethtool.o
 obj-$(CONFIG_SYSFS) += net-sysfs.o
 obj-$(CONFIG_NET_PKTGEN) += pktgen.o
 obj-$(CONFIG_NETPOLL) += netpoll.o
diff --git a/net/core/dev.c b/net/core/dev.c
index 2972af9..431c8f0 100644
--- a/net/core/dev.c
+++ b/net/core/dev.c
@@ -3200,6 +3200,7 @@ int dev_ioctl(unsigned int cmd, void __user *arg)
 			return ret;
 
 		case SIOCETHTOOL:
+#ifdef CONFIG_ETHTOOL
 			dev_load(ifr.ifr_name);
 			rtnl_lock();
 			ret = dev_ethtool(&ifr);
@@ -3212,6 +3213,9 @@ int dev_ioctl(unsigned int cmd, void __user *arg)
 					ret = -EFAULT;
 			}
 			return ret;
+#else
+			return -EINVAL;
+#endif
 
 		/*
 		 *	These ioctl calls:
-- 
1.6.0.6

