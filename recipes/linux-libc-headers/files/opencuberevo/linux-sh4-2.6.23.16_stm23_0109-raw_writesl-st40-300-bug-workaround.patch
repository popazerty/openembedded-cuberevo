This patch works around a bug found in the SH4-300 (GNBvd67168). This causes
stores in delay slots to not be cancelled when interrupted. This makes
stores to FIFOs and other devices which are sensitive to how many times
the data is written unsafe in these circumstances.

This patch simply moves the store out of the delay slot. This is unlikely
to have any impact on performance on an SH4, although an SH3 would see one
additional cycle per loop iteration.

Signed-off-by: Stuart Menefy <stuart.menefy@st.com>
Index: linux-2.6.23-stm/arch/sh/kernel/io.c
===================================================================
--- linux-2.6.23-stm.orig/arch/sh/kernel/io.c
+++ linux-2.6.23-stm/arch/sh/kernel/io.c
@@ -192,11 +192,15 @@ void __raw_writesl(void __iomem *addrp, 
 		int tmp1;
 
 		__asm__ __volatile__ (
-			"1:				\n\t"
+			"1:			\n\t"
 			"mov.l	@%0+, %1	\n\t"
-			"dt		%3		\n\t"
-			"bf.s		1b		\n\t"
-			" mov.l	%1, @%4		\n\t"
+			"dt	%3		\n\t"
+			"mov.l	%1, @%4		\n\t"
+			"bf	1b		\n\t"
+			/*
+			 * Note we cannot put the mov.l into the delay slot
+			 * here, because of a bug in the SH4-300 (GNBvd67168).
+			 */
 			: "=&r" (data), "=&r" (tmp1)
 			: "0" (data), "r" (len), "r"(addr)
 			: "t", "memory");
