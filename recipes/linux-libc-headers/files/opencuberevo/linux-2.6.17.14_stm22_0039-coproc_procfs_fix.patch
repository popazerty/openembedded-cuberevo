This patch avoid build errors when stm-coprocessor is built without PROC_FS support enabled.

Signed-off-by: Giuseppe Condorelli <giuseppe.condorelli@st.com>
================================================================================
Index: linux/drivers/stm/stm-coprocessor.c
===================================================================
--- linux.orig/drivers/stm/stm-coprocessor.c	2007-08-31 15:00:16.917516000 +0100
+++ linux/drivers/stm/stm-coprocessor.c	2007-09-25 12:18:09.628944000 +0100
@@ -24,12 +24,6 @@
 
 #include <linux/delay.h>
 #include <linux/mm.h>
-
-#ifdef CONFIG_PROC_FS
-#include <linux/proc_fs.h>
-#include <linux/seq_file.h>
-#endif
-
 #include <linux/st-coprocessor.h>
 #include <linux/platform_device.h>
 #include <asm/types.h>
@@ -38,12 +32,17 @@
 #include <asm/io.h>
 #include <asm/irq.h>
 
+#ifdef CONFIG_PROC_FS
+#include <linux/proc_fs.h>
+#include <linux/seq_file.h>
+
 /* ---------------------------------------------------------------------------
  *     Local (declared out of order) functions
  * ------------------------------------------------------------------------ */
 
-static int __init parse_coproc_mem(char *from);
 static int __init proc_st_coproc_init(void);
+#endif
+static int __init parse_coproc_mem(char *from);
 
 /* ---------------------------------------------------------------------------
  *    Exported and Imported
@@ -559,7 +558,9 @@
 		__debug(cop, __FUNCTION__);
 	}
 
+#ifdef CONFIG_PROC_FS
 	proc_st_coproc_init();
+#endif
 
 	return (0);
 }
@@ -653,7 +654,7 @@
 module_init(st_coproc_init);
 module_exit(st_coproc_exit);
 
-#if CONFIG_PROC_FS
+#ifdef CONFIG_PROC_FS
 
 static int show_st_coproc(struct seq_file *m, void *v)
 {
Index: linux/drivers/stm/stm-coprocessor_frmw.c
===================================================================
--- linux.orig/drivers/stm/stm-coprocessor_frmw.c	2007-08-31 15:00:16.912516000 +0100
+++ linux/drivers/stm/stm-coprocessor_frmw.c	2007-09-25 12:18:09.642944000 +0100
@@ -21,12 +21,6 @@
 
 #include <linux/delay.h>
 #include <linux/mm.h>
-
-#ifdef CONFIG_PROC_FS
-#include <linux/proc_fs.h>
-#include <linux/seq_file.h>
-#endif
-
 #include <linux/st-coprocessor.h>
 #include <asm/types.h>
 #include <asm/sections.h>
@@ -36,18 +30,23 @@
 
 #undef dbg_print
 
-#ifdef CONFIG_COPROCESSOR_DEBUG
-#define dbg_print(fmt, args...)  printk("%s: " fmt, __FUNCTION__ , ## args)
-#else
-#define dbg_print(fmt, args...)
-#endif
+#ifdef CONFIG_PROC_FS
+#include <linux/proc_fs.h>
+#include <linux/seq_file.h>
 
 /* ---------------------------------------------------------------------------
  *     Local (declared out of order) functions
  * ------------------------------------------------------------------------ */
 
-static int __init parse_coproc_mem(char *from);
 static int __init proc_st_coproc_init(void);
+#endif
+static int __init parse_coproc_mem(char *from);
+
+#ifdef CONFIG_COPROCESSOR_DEBUG
+#define dbg_print(fmt, args...)  printk("%s: " fmt, __FUNCTION__ , ## args)
+#else
+#define dbg_print(fmt, args...)
+#endif
 
 /* ---------------------------------------------------------------------------
  *    Exported and Imported
@@ -261,7 +260,9 @@
 		}
 	}
 
+#ifdef CONFIG_PROC_FS
 	proc_st_coproc_init();
+#endif
 
 	return (0);
 }
@@ -355,7 +356,7 @@
 module_init(st_coproc_init);
 module_exit(st_coproc_exit);
 
-#if CONFIG_PROC_FS
+#ifdef CONFIG_PROC_FS
 
 static int show_st_coproc(struct seq_file *m, void *v)
 {
