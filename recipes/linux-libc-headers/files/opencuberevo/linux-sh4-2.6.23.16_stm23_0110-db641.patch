commit d0574a71d97c36b9333d7dd9b8ac59d350718efe
Author: Pawel Moll <pawel.moll@st.com>
Date:   Tue May 13 10:31:06 2008 +0100

    DB641 (STEM board with double Ethernet interface) support
    
    Signed-off-by: Pawel Moll <pawel.moll@st.com>

diff --git a/arch/sh/Kconfig b/arch/sh/Kconfig
index a5d923a..98b247c 100644
--- a/arch/sh/Kconfig
+++ b/arch/sh/Kconfig
@@ -554,6 +554,14 @@ config SH_ST_MB680
 
 comment "ST Peripheral Boards"
 
+config SH_ST_DB641
+	bool "db641: STEM board with double SMSC LAN9117 Ethernet interface"
+	depends on SH_ST_STEM
+	help
+	  Supports DB641 STEM board. Only first port (CN1) is supported.
+	  See "arch/sh/boards/st/common/db641.c" for configuration
+	  informations.
+
 config SH_ST_MB520
 	bool "mb520: STB peripherals board"
 	depends on SH_ST_STPM_HD_V1
diff --git a/arch/sh/boards/st/common/Makefile b/arch/sh/boards/st/common/Makefile
index a988e89..ac1fdfe 100644
--- a/arch/sh/boards/st/common/Makefile
+++ b/arch/sh/boards/st/common/Makefile
@@ -5,5 +5,6 @@
 obj-$(CONFIG_SH_ST_HARP_IRQ) += harp-irq.o
 obj-$(CONFIG_SH_ST_EPLD) += epld.o
 
+obj-$(CONFIG_SH_ST_DB641) += db641.o
 obj-$(CONFIG_SH_ST_MB520) += mb520.o
 obj-$(CONFIG_SH_ST_MB562) += mb562.o
diff --git a/arch/sh/boards/st/common/db641.c b/arch/sh/boards/st/common/db641.c
new file mode 100644
index 0000000..8215ae5
--- /dev/null
+++ b/arch/sh/boards/st/common/db641.c
@@ -0,0 +1,71 @@
+/*
+ * arch/sh/boards/st/common/db641.c
+ *
+ * Copyright (C) 2007 STMicroelectronics Limited
+ * Author: Pawel MOLL <pawel.moll@st.com>
+ *
+ * May be copied or modified under the terms of the GNU General Public
+ * License.  See linux/COPYING for more information.
+ *
+ * STMicroelectronics STEM board with double Ethernet interface support
+ *
+ * Only first port (CN1) is supported. Required DB641 jumpers settings are:
+ * - J1 and J5 = open
+ * - J2, J3, J4 = 1-2
+ *
+ * STEM notCS0/notINTR0 lines are expected to be used - see
+ * "include/asm-sh/<board>/stem.h" for more information about
+ * main board configuration.
+ */
+
+#include <linux/init.h>
+#include <linux/platform_device.h>
+#include <linux/stm/emi.h>
+#include <asm/mach/stem.h>
+
+static struct platform_device smsc_lan9117 = {
+	.name		= "smc911x",
+	.id		= -1,
+	.num_resources	= 4,
+	.resource	= (struct resource []) {
+		{
+			.flags = IORESOURCE_MEM,
+			/* .start & .end - see db641_init() */
+		},
+		{
+			.flags = IORESOURCE_IRQ,
+			/* .start & .end - see db641_init() */
+		},
+		/* See end of "drivers/net/smsc_911x/smsc9118.c" file
+		 * for description of two following resources. */
+		{
+			.flags = IORESOURCE_IRQ,
+			.name  = "polarity",
+			.start = 0,
+			.end   = 0,
+		},
+		{
+			.flags = IORESOURCE_IRQ,
+			.name  = "type",
+			.start = 0,
+			.end   = 0,
+		},
+	},
+};
+
+static int __init db641_init(void)
+{
+	smsc_lan9117.resource[0].start = emi_bank_base(STEM_CS0_BANK)
+			+ STEM_CS0_OFFSET;
+	smsc_lan9117.resource[0].end = smsc_lan9117.resource[0].start + 0xff;
+	
+	smsc_lan9117.resource[1].start = STEM_INTR0_IRQ;
+	smsc_lan9117.resource[1].end = smsc_lan9117.resource[1].start;
+
+	emi_bank_configure(STEM_CS0_BANK, (unsigned long[4]){ 0x041086f1,
+			0x0e024400, 0x0e024400, 0 });
+
+	return platform_device_register(&smsc_lan9117);
+}
+arch_initcall(db641_init);
+
