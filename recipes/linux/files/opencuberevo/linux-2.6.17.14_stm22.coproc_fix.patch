This patch adds the discovery system support to the STLinux2.2
 back ported from STLinux 2.3
It's aligned with the lasted udev (116) and the lasted stslave (0.7)
 on the STLinux 2.2
Signedoff-by: Francesco M. Virlinzi <francesco.virlinzi@st.com>
===============================================================
diff -upNr -X notdiff.txt linux-2.6.17.14_stm22_0040.i2c_glitch_no_stop/drivers/stm/stm-coprocessor.c linux-2.6.17.14_stm22_0040.i2c_glitch/drivers/stm/stm-coprocessor.c
--- linux-2.6.17.14_stm22_0040.i2c_glitch_no_stop/drivers/stm/stm-coprocessor.c	2008-01-22 16:36:21.000000000 +0100
+++ linux-2.6.17.14_stm22_0040.i2c_glitch/drivers/stm/stm-coprocessor.c	2008-03-03 12:29:15.831817440 +0100
@@ -18,9 +18,6 @@
 #include <linux/device.h>
 #include <linux/vmalloc.h>
 
-#ifdef CONFIG_DEVFS_FS
-#include <linux/devfs_fs_kernel.h>
-#endif
 
 #include <linux/delay.h>
 #include <linux/mm.h>
@@ -374,14 +371,7 @@ static loff_t st_coproc_llseek(struct fi
 	default:
 		return -EINVAL;
 	}
-/*
- * A little problem with the current (0.6) stslave
- * The current stslave assumes a zero offset
- */
-	file->f_pos -= cop->ram_offset;
-/*
- * End stslave problem
- */
+
 	if (file->f_pos >= cop->ram_size)
 		file->f_pos = cop->ram_size - 1;
 
@@ -478,11 +468,13 @@ static struct device_driver st_coproc_dr
 	.probe = st_coproc_driver_probe,
 };
 
+static struct class *coproc_dev_class;
 static int __init st_coproc_init(void)
 {
 	int i;
 	coproc_t *cop;
 	struct device *dev;
+	dev_t ch_device;
 
 	printk("STMicroelectronics - Coprocessors %s Init\n", coproc_info.name);
 
@@ -498,6 +490,8 @@ static int __init st_coproc_init(void)
 		return (-EAGAIN);
 	}
 
+	coproc_dev_class = class_create(THIS_MODULE, "coproc-dev");
+
 	for (cop = &coproc[0], i = 0; i < coproc_info.max_coprs; i++, cop++) {
 		cop->id = i;
 
@@ -511,9 +505,6 @@ static int __init st_coproc_init(void)
 		}
 		/*
 		 ** Nodes:
-		 **    STm8000/ST220Eval: /dev/st220-0    c   63   0
-		 **                       /dev/st220-1    c   63   1
-		 **                       /dev/st220-2    c   63   2
 		 **    STb7100          : /dev/st231-0    c   63   0
 		 **                    : /dev/st231-1    c   63   1
 		 ** if the device file system support is configured the above
@@ -535,6 +526,10 @@ static int __init st_coproc_init(void)
 			device_create_file(dev, &dev_attr_mem_base);
 			device_create_file(dev, &dev_attr_mem_size);
 			device_create_file(dev, &dev_attr_running);
+			/* Create the device file via Discovery System */
+			cop->class_dev = class_device_create(coproc_dev_class, NULL,
+						MKDEV(COPROCESSOR_MAJOR,cop->id),
+						NULL,"st231-%d", cop->id);
 		}
 
 		/* Now complete with the platform dependent init stage */
diff -upNr -X notdiff.txt linux-2.6.17.14_stm22_0040.i2c_glitch_no_stop/drivers/stm/stm-coprocessor_frmw.c linux-2.6.17.14_stm22_0040.i2c_glitch/drivers/stm/stm-coprocessor_frmw.c
--- linux-2.6.17.14_stm22_0040.i2c_glitch_no_stop/drivers/stm/stm-coprocessor_frmw.c	2008-01-22 16:36:21.000000000 +0100
+++ linux-2.6.17.14_stm22_0040.i2c_glitch/drivers/stm/stm-coprocessor_frmw.c	2008-03-03 12:18:53.650403392 +0100
@@ -194,11 +194,13 @@ static struct device_driver st_coproc_dr
 	.probe = st_coproc_driver_probe,
 };
 
+static struct class *coproc_dev_class;
 static int __init st_coproc_init(void)
 {
 	int i;
 	coproc_t *cop;
 	struct device *dev;
+	int frmw_idx;
 
 	printk("STMicroelectronics - Coprocessors %s Init\n", coproc_info.name);
 
@@ -215,6 +217,8 @@ static int __init st_coproc_init(void)
 		return (-EAGAIN);
 	}
 
+	coproc_dev_class = class_create(THIS_MODULE, "coproc-dev");
+
 	for (cop = &coproc[0], i = 0; i < coproc_info.max_coprs; i++, cop++) {
        /**
         ** Nodes:
@@ -250,6 +254,16 @@ static int __init st_coproc_init(void)
 			device_create_file(dev, &dev_attr_mem_base);
 			device_create_file(dev, &dev_attr_mem_size);
 			device_create_file(dev, &dev_attr_running);
+			/*
+			 * Create the six device file [firmware]
+			 * for each coprocessor via Discovery System
+			 */
+			for(frmw_idx=0; frmw_idx < 10; ++frmw_idx)
+			/* Be carefull the '6' used in MKDEV(..) depends on
+			 * minor number device file translation */
+			cop->class_dev = class_device_create(coproc_dev_class, NULL,
+				MKDEV(COPROCESSOR_MAJOR,cop->id<<6 | frmw_idx),
+				NULL,"st231-%d-%d", cop->id, frmw_idx);
 		}
 
 		/* Now complete with the platform dependent init stage */
diff -upNr -X notdiff.txt linux-2.6.17.14_stm22_0040.i2c_glitch_no_stop/include/linux/st-coprocessor.h linux-2.6.17.14_stm22_0040.i2c_glitch/include/linux/st-coprocessor.h
--- linux-2.6.17.14_stm22_0040.i2c_glitch_no_stop/include/linux/st-coprocessor.h	2008-01-22 16:36:37.000000000 +0100
+++ linux-2.6.17.14_stm22_0040.i2c_glitch/include/linux/st-coprocessor.h	2008-03-03 12:17:34.744398928 +0100
@@ -92,6 +92,7 @@ typedef struct {
 	u_long	    mbox_entryp;	/* where to put the entry point...  */
 	u_long	    mbox_enable;	/* ... to trigger the CPU start     */
 	struct device dev;
+	struct class_device *class_dev;
 } coproc_t;
 
 struct coproc_board_info {
