Added initial MB520 support, GPIO for MB618, removed leds-mb519 and leds-mb618 drivers.

- Added support for MB520 peripherals board: I2C PIO extender, GPIO led support
- Added GPIO leds support for MB618
- Removed leds-mb519 and leds-mb618 drivers, as these leds are handled by leds-gpio now.
    
Signed-off-by: Pawel MOLL <pawel.moll@st.com>

diff --git a/arch/sh/Kconfig b/arch/sh/Kconfig
index e4afec2..b3a8081 100644
--- a/arch/sh/Kconfig
+++ b/arch/sh/Kconfig
@@ -370,12 +370,23 @@ config SH_ST_MB519
 	  ST board ID: mb519). More information at:
 	  <http://www.stlinux.com/boards/mb519/>
 
+config SH_ST_MB520
+	bool "mb520: STB peripherals board"
+	depends on SH_ST_MB519
+	select I2C
+	select I2C_BOARDINFO
+	select I2C_STM
+	select GPIO_PCF857X
+	help
+	  Select SH_ST_MB520 if your processor board is connected
+	  to this STB-like peripherals board.
+
 config SH_ST_MB562
 	bool "mb562: BD-DVD peripherals board"
 	depends on SH_ST_MB519
 	help
 	  Select SH_ST_MB562 if your processor board is connected
-	  with this multi-audio-outputs board.
+	  to this multi-audio-outputs board.
 
 config SH_HP6XX
 	bool "HP6XX"
diff --git a/arch/sh/boards/st/common/mb520.c b/arch/sh/boards/st/common/mb520.c
new file mode 100644
index 0000000..a931267
--- /dev/null
+++ b/arch/sh/boards/st/common/mb520.c
@@ -0,0 +1,69 @@
+/*
+ * arch/sh/boards/st/common/mb520.c
+ *
+ * Copyright (C) 2007 STMicroelectronics Limited
+ * Author: Pawel MOLL <pawel.moll@st.com>
+ *
+ * May be copied or modified under the terms of the GNU General Public
+ * License.  See linux/COPYING for more information.
+ *
+ * STMicroelectronics STB peripherals board support.
+ */
+
+#include <linux/init.h>
+#include <linux/platform_device.h>
+#include <linux/leds.h>
+#include <linux/i2c.h>
+#include <linux/i2c/pcf857x.h>
+#include <linux/stm/sysconf.h>
+#include <linux/stm/pio.h>
+#include <linux/bug.h>
+#include <asm/processor.h>
+
+static struct platform_device mb520_led = {
+	.name = "leds-gpio",
+	.id = -1,
+	.dev.platform_data = &(struct gpio_led_platform_data) {
+		.num_leds = 1,
+		.leds = (struct gpio_led[]) {
+			{
+				.name = "HB",
+				.default_trigger = "heartbeat",
+				.gpio = stpio_to_gpio(4, 7),
+				.active_low = 1,
+			},
+		},
+	},
+};
+
+static struct i2c_board_info pio_extender_ic23 = {
+	I2C_BOARD_INFO("pcf857x", 0x27),
+	.type = "pcf8575",
+	.platform_data = &(struct pcf857x_platform_data) {
+		.gpio_base = 200,
+	},
+};
+
+static int __init device_init(void)
+{
+	struct sysconf_field *sc;
+
+	/* So far valid only for 7200 processor board! */
+	BUG_ON(cpu_data->type != CPU_STX7200);
+
+	/* Heartbeat led */
+	platform_device_register(&mb520_led);
+
+	/* CONF_PAD_AUD[0] = 1
+	 * AUDDIG* are connected PCMOUT3_* - 10-channels PCM player #3
+	 * ("scenario 1", but only one channel is available) */
+	sc = sysconf_claim(SYS_CFG, 20, 0, 0, "pcm_player.3");
+	sysconf_write(sc, 1);
+
+	/* I2C PIO extender (IC23), connected do SSC4 (third I2C device
+	 * in case of MB519...) */
+	i2c_register_board_info(2, &pio_extender_ic23, 1);
+
+	return 0;
+}
+arch_initcall(device_init);
diff --git a/arch/sh/boards/st/common/mb562.c b/arch/sh/boards/st/common/mb562.c
index 2a04898..22db474 100644
--- a/arch/sh/boards/st/common/mb562.c
+++ b/arch/sh/boards/st/common/mb562.c
@@ -12,11 +12,16 @@
 
 #include <linux/init.h>
 #include <linux/stm/sysconf.h>
+#include <linux/bug.h>
+#include <asm/processor.h>
 
 static int __init device_init(void)
 {
 	struct sysconf_field *sc;
 
+	/* So far valid only for 7200 processor board! */
+	BUG_ON(cpu_data->type != CPU_STX7200);
+
 	/* Set up "scenario 1" of audio outputs */
 
 	/* CONF_PAD_AUD[0] = 1
diff --git a/arch/sh/boards/st/mb519/Makefile b/arch/sh/boards/st/mb519/Makefile
index f75c823..ebba907 100644
--- a/arch/sh/boards/st/mb519/Makefile
+++ b/arch/sh/boards/st/mb519/Makefile
@@ -3,6 +3,8 @@
 #
 
 obj-y := setup.o epld.o
+obj-$(CONFIG_SH_ST_MB520) += mb520.o
 obj-$(CONFIG_SH_ST_MB562) += mb562.o
 epld-y := ../common/epld.o
+mb520-y := ../common/mb520.o
 mb562-y := ../common/mb562.o
diff --git a/arch/sh/boards/st/mb618/setup.c b/arch/sh/boards/st/mb618/setup.c
index 724cc65..68b9233 100644
--- a/arch/sh/boards/st/mb618/setup.c
+++ b/arch/sh/boards/st/mb618/setup.c
@@ -12,6 +12,7 @@
 
 #include <linux/init.h>
 #include <linux/platform_device.h>
+#include <linux/leds.h>
 #include <linux/stm/pio.h>
 #include <linux/stm/soc.h>
 #include <linux/stm/emi.h>
@@ -51,6 +52,25 @@ static struct plat_ssc_data ssc_private_info = {
 		ssc3_has(SSC_I2C_CAPABILITY),
 };
 
+static struct platform_device mb618_leds = {
+	.name = "leds-gpio",
+	.id = -1,
+	.dev.platform_data = &(struct gpio_led_platform_data) {
+		.num_leds = 2,
+		.leds = (struct gpio_led[]) {
+			{
+				.name = "HB green",
+				.default_trigger = "heartbeat",
+				.gpio = stpio_to_gpio(6, 0),
+			},
+			{
+				.name = "HB red",
+				.gpio = stpio_to_gpio(6, 1),
+			},
+		},
+	},
+};
+
 /* J34 must be in the 2-3 position to enable NOR Flash */
 static struct stpio_pin *vpp_pio;
 
@@ -184,6 +204,7 @@ static struct nand_config_data mb618_nand_config = {
 };
 
 static struct platform_device *mb618_devices[] __initdata = {
+	&mb618_leds,
 	&epld_device,
 #ifdef FLASH_NOR
 	&physmap_flash,
diff --git a/drivers/leds/Kconfig b/drivers/leds/Kconfig
index bdd72a1..9a66ef4 100644
--- a/drivers/leds/Kconfig
+++ b/drivers/leds/Kconfig
@@ -108,13 +108,6 @@ config LEDS_MB374
 	  This option enables support for the LEDs on the STMicroelectronics
 	  mb374 (ST40RA Starter board).
 
-config LEDS_MB618
-	tristate "LED Support for STMicroelectronics mb618 LEDs"
-	depends on LEDS_CLASS && SH_ST_MB618
-	help
-	  This option enables support for the LEDs on the STMicroelectronics
-	  mb618 (STx7111 Mboard).
-
 comment "LED Triggers"
 
 config LEDS_TRIGGERS
diff --git a/drivers/leds/Makefile b/drivers/leds/Makefile
index 30eaf44..83bca27 100644
--- a/drivers/leds/Makefile
+++ b/drivers/leds/Makefile
@@ -19,9 +19,6 @@ obj-$(CONFIG_LEDS_COBALT)		+= leds-cobalt.o
 obj-$(CONFIG_LEDS_GPIO)			+= leds-gpio.o
 obj-$(CONFIG_LEDS_MB374)		+= leds-mb374.o
 obj-$(CONFIG_SH_ST_MB411)		+= leds-mb411.o
-obj-$(CONFIG_SH_ST_MB411)		+= leds-mb411.o
-obj-$(CONFIG_SH_ST_MB519)		+= leds-mb519.o
-obj-$(CONFIG_SH_ST_MB618)		+= leds-mb618.o
 
 # LED Triggers
 obj-$(CONFIG_LEDS_TRIGGER_TIMER)	+= ledtrig-timer.o
diff --git a/drivers/leds/leds-mb519.c b/drivers/leds/leds-mb519.c
deleted file mode 100644
index ff7059c..0000000
--- a/drivers/leds/leds-mb519.c
+++ /dev/null
@@ -1,53 +0,0 @@
-/*
- * linux/drivers/leds/leds-mb519.c
- *
- * Copyright (C) 2007 STMicroelectronics Limited
- * Author: Stuart Menefy <stuart.menefy@st.com>
- *
- * This program is free software; you can redistribute it and/or modify
- * it under the terms of the GNU General Public License version 2 as
- * published by the Free Software Foundation.
- *
- * This actually controls the heartbeat LED (LD12T) on the mb520 application
- * board, as the mb519 has no software controllable LEDs itself.
- */
-
-#include <linux/module.h>
-#include <linux/types.h>
-#include <linux/kernel.h>
-#include <linux/device.h>
-#include <linux/leds.h>
-#include <linux/stm/pio.h>
-#include <asm/io.h>
-
-static struct stpio_pin *led;
-
-static void mb519_led_set(struct led_classdev *led_cdev, enum led_brightness brightness)
-{
-	stpio_set_pin(led, !brightness);
-}
-
-static struct led_classdev mb519_led = {
-	.name = "mb519-led",
-	.brightness_set = mb519_led_set,
-	.default_trigger = "heartbeat",
-};
-
-static int __init mb519_led_init(void)
-{
-	led = stpio_request_pin(4, 7, "LED", STPIO_OUT);
-	if (led != NULL)
-		led_classdev_register(NULL, &mb519_led);
-}
-
-static void __exit mb519_led_exit(void)
-{
-	led_classdev_unregister(&mb519_led);
-}
-
-module_init(mb519_led_init);
-module_exit(mb519_led_exit);
-
-MODULE_LICENSE("GPL");
-MODULE_DESCRIPTION("LED support for STMicroelectronics mb519");
-MODULE_AUTHOR("Stuart Menefy <stuart.menefy@st.com>");
diff --git a/drivers/leds/leds-mb618.c b/drivers/leds/leds-mb618.c
deleted file mode 100644
index 26221b5..0000000
--- a/drivers/leds/leds-mb618.c
+++ /dev/null
@@ -1,71 +0,0 @@
-/*
- * linux/drivers/leds/leds-mb618.c
- *
- * Copyright (C) 2008 STMicroelectronics Limited
- * Author: Stuart Menefy <stuart.menefy@st.com>
- *
- * This program is free software; you can redistribute it and/or modify
- * it under the terms of the GNU General Public License version 2 as
- * published by the Free Software Foundation.
- */
-
-#include <linux/module.h>
-#include <linux/types.h>
-#include <linux/kernel.h>
-#include <linux/device.h>
-#include <linux/leds.h>
-#include <linux/stm/pio.h>
-#include <asm/io.h>
-
-struct mb618_led {
-	struct led_classdev cdev;
-	struct stpio_pin *pio;
-};
-
-static void mb618_led_set(struct led_classdev *led_cdev, enum led_brightness brightness)
-{
-	struct mb618_led *led_dev =
-		container_of(led_cdev, struct mb618_led, cdev);
-	stpio_set_pin(led_dev->pio, brightness);
-}
-
-static struct mb618_led mb618_leds[2] = {
-	{
-		.cdev = {
-			.name = "mb618-led:green",
-			.brightness_set = mb618_led_set,
-			.default_trigger = "heartbeat",
-		}
-	}, {
-		.cdev = {
-			.name = "mb618-led:red",
-			.brightness_set = mb618_led_set,
-		}
-	}
-};
-
-static int __init mb618_led_init(void)
-{
-	int i;
-	for (i=0; i<ARRAY_SIZE(mb618_leds); i++) {
-		mb618_leds[i].pio = stpio_request_set_pin(6, i, "LED",
-							  STPIO_OUT, 0);
-		if (mb618_leds[i].pio != NULL)
-			led_classdev_register(NULL, &mb618_leds[i].cdev);
-	}
-}
-
-static void __exit mb618_led_exit(void)
-{
-	int i;
-	for (i=0; i<ARRAY_SIZE(mb618_leds); i++) {
-		led_classdev_unregister(&mb618_leds[i].cdev);
-	}
-}
-
-module_init(mb618_led_init);
-module_exit(mb618_led_exit);
-
-MODULE_LICENSE("GPL");
-MODULE_DESCRIPTION("LED support for STMicroelectronics mb618");
-MODULE_AUTHOR("Stuart Menefy <stuart.menefy@st.com>");
