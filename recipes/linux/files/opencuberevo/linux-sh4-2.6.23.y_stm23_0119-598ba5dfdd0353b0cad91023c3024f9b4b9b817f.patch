From 598ba5dfdd0353b0cad91023c3024f9b4b9b817f Mon Sep 17 00:00:00 2001
From: Giuseppe CAVALLARO <peppe.cavallaro@st.com>
Date: Thu, 23 Apr 2009 11:52:41 +0200
Subject: [PATCH] stmmac: do some explicit prefetching of incoming packets

This patch only adds some prefetch instructions within receive process.
A few tests (e.g. UDP recv tests with nuttcp tool), on the mb618 Gmac,
show a little gain of ~5% in terms of cpu usage.

On 7109 MAC (ST40-200) it seems the performances aren't worst; although, we
know the prefetch doesn't help for this CPU.

Signed-off-by: Giuseppe Cavallaro <peppe.cavallaro@st.com>
---
 drivers/net/stmmac/stmmac_main.c |    5 ++++-
 1 files changed, 4 insertions(+), 1 deletions(-)

diff --git a/drivers/net/stmmac/stmmac_main.c b/drivers/net/stmmac/stmmac_main.c
index 410eab4..ca5127a 100644
--- a/drivers/net/stmmac/stmmac_main.c
+++ b/drivers/net/stmmac/stmmac_main.c
@@ -1483,6 +1483,7 @@ static int stmmac_rx(struct net_device *dev, int limit)
 	}
 #endif
 	count = 0;
+	prefetch(p);
 	while (!priv->mac_type->ops->get_rx_owner(p)) {
 		int status;
 
@@ -1493,6 +1494,7 @@ static int stmmac_rx(struct net_device *dev, int limit)
 
 		next_entry = (++priv->cur_rx) % rxsize;
 		p_next = priv->dma_rx + next_entry;
+		prefetch(p_next);
 
 		/* read the status of the incoming frame */
 		status = (priv->mac_type->ops->rx_status(&dev->stats,
@@ -1522,6 +1524,7 @@ static int stmmac_rx(struct net_device *dev, int limit)
 				dev->stats.rx_dropped++;
 				break;
 			}
+			prefetch(skb->data - NET_IP_ALIGN);
 			priv->rx_skbuff[entry] = NULL;
 
 			skb_put(skb, frame_len);
@@ -1549,7 +1552,7 @@ static int stmmac_rx(struct net_device *dev, int limit)
 			dev->last_rx = jiffies;
 		}
 		entry = next_entry;
-		p = p_next;
+		p = p_next;	/* use prefetched values */
 	}
 
 	stmmac_rx_refill(dev);
-- 
1.6.0.6

