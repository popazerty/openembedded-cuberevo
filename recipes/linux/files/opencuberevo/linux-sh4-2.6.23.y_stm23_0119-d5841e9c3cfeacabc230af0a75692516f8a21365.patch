From d5841e9c3cfeacabc230af0a75692516f8a21365 Mon Sep 17 00:00:00 2001
From: Francesco Virlinzi <francesco.virlinzi@st.com>
Date: Thu, 21 May 2009 11:38:17 +0200
Subject: [PATCH] stm: pm: Updated the ASC to fully support hibernation

This patch updates the ASC to fully support hibernation

Signed-off-by: Francesco Virlinzi <francesco.virlinzi@st.com>
---
 drivers/serial/stasc.c |   23 +++++++++++++++++------
 drivers/serial/stasc.h |    1 +
 2 files changed, 18 insertions(+), 6 deletions(-)

diff --git a/drivers/serial/stasc.c b/drivers/serial/stasc.c
index ba016af..1bb741e 100644
--- a/drivers/serial/stasc.c
+++ b/drivers/serial/stasc.c
@@ -426,10 +426,13 @@ static int asc_serial_suspend(struct platform_device *pdev, pm_message_t state)
 {
 	struct asc_port *ascport = &asc_ports[pdev->id];
 	struct uart_port *port   = &(ascport->port);
+	unsigned long flags;
 
 	if (!device_can_wakeup(&(pdev->dev)))
 		return 0; /* the other ASCs... */
 
+	local_irq_save(flags);
+	ascport->ctrl = asc_in(port, CTL);
 	if (state.event == PM_EVENT_SUSPEND && device_may_wakeup(&(pdev->dev))){
 #ifndef CONFIG_DISABLE_CONSOLE_SUSPEND
 		ascport->flags |= ASC_SUSPENDED;
@@ -437,12 +440,12 @@ static int asc_serial_suspend(struct platform_device *pdev, pm_message_t state)
 			stpio_configure_pin(ascport->pios[0], STPIO_IN); /* Tx  */
 		asc_disable_tx_interrupts(port);
 #endif
-		return 0; /* leaves the rx interrupt enabled! */
+		goto ret_asc_suspend;
 	}
 
 	if (state.event == PM_EVENT_FREEZE) {
 		asc_disable_rx_interrupts(port);
-		return 0;
+		goto ret_asc_suspend;
 	}
 	if (ascport->pios[0])
 		stpio_configure_pin(ascport->pios[0], STPIO_IN); /* Tx  */
@@ -451,6 +454,9 @@ static int asc_serial_suspend(struct platform_device *pdev, pm_message_t state)
 	ascport->flags |= ASC_SUSPENDED;
 	asc_disable_tx_interrupts(port);
 	asc_disable_rx_interrupts(port);
+
+ret_asc_suspend:
+	local_irq_restore(flags);
 	return 0;
 }
 
@@ -461,20 +467,25 @@ static int asc_serial_resume(struct platform_device *pdev)
 	struct uart_port *port   = &(ascport->port);
 	struct stasc_uart_data *pdata =
 		(struct stasc_uart_data *)pdev->dev.platform_data;
+	unsigned long flags;
 	int i;
 
 	if (!device_can_wakeup(&(pdev->dev)))
 		return 0; /* the other ASCs... */
 
-	/* Reconfigure the Pio Pins */
+	local_irq_save(flags);
 	for (i = 0; i < 4; ++i)
-		if (ascport->pios[i])
-			stpio_configure_pin(ascport->pios[i],
-					pdata->pios[i].pio_direction);
+	if (ascport->pios[i])
+		stpio_configure_pin(ascport->pios[i],
+			pdata->pios[i].pio_direction);
 
+	asc_out(port, CTL, ascport->ctrl);
+	asc_out(port, TIMEOUT, 20);		/* hardcoded */
+	asc_set_baud(port, ascport->baud);	/* to resume from hmem */
 	asc_enable_rx_interrupts(port);
 	asc_enable_tx_interrupts(port);
 	ascport->flags &= ~ASC_SUSPENDED;
+	local_irq_restore(flags);
 	return 0;
 }
 #else
diff --git a/drivers/serial/stasc.h b/drivers/serial/stasc.h
index b114b0d..27c1839 100644
--- a/drivers/serial/stasc.h
+++ b/drivers/serial/stasc.h
@@ -31,6 +31,7 @@ struct asc_port_fdma {
 struct asc_port {
 	struct uart_port port;
 	unsigned long baud;
+	unsigned long ctrl;
 	struct stpio_pin *pios[4];
 	unsigned char flags;
 #ifdef CONFIG_SERIAL_ST_ASC_FDMA
-- 
1.6.0.6

