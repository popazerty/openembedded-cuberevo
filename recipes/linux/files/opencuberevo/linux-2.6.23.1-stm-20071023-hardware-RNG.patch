Extends the Linux kernel /dev/hw_random support to include
the STM RNG present on the STx7109 and STx7200 SoCs.

Signed-off-by: Carl Shaw <carl.shaw@st.com>

Index: linux/drivers/char/hw_random/Makefile
===================================================================
--- linux.orig/drivers/char/hw_random/Makefile	2007-10-12 17:43:44.000000000 +0100
+++ linux/drivers/char/hw_random/Makefile	2007-10-29 14:23:19.850713000 +0000
@@ -11,3 +11,4 @@
 obj-$(CONFIG_HW_RANDOM_IXP4XX) += ixp4xx-rng.o
 obj-$(CONFIG_HW_RANDOM_OMAP) += omap-rng.o
 obj-$(CONFIG_HW_RANDOM_PASEMI) += pasemi-rng.o
+obj-$(CONFIG_HW_RANDOM_STM) += stm-rng.o
Index: linux/drivers/char/hw_random/stm-rng.c
===================================================================
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ linux/drivers/char/hw_random/stm-rng.c	2007-10-29 14:23:19.857712000 +0000
@@ -0,0 +1,125 @@
+/*
+ * drivers/char/hw_random/omap-rng.c
+ *
+ * RNG driver for ST Microelectronics STx7109, STx7200 SoCs
+ *
+ * Author: Carl Shaw <carl.shaw@st.com>
+ *
+ * Copyright 2007 (c) ST Microelectronics R&D Ltd.
+ *
+ * Based on omap RNG driver
+ *
+ * This file is licensed under  the terms of the GNU General Public
+ * License version 2. This program is licensed "as is" without any
+ * warranty of any kind, whether express or implied.
+ *
+ */
+
+#include <linux/module.h>
+#include <linux/init.h>
+#include <linux/random.h>
+#include <linux/clk.h>
+#include <linux/err.h>
+#include <linux/platform_device.h>
+#include <linux/hw_random.h>
+
+#include <asm/io.h>
+
+#define STM_RNG_STATUS_REG 0x20
+#define STM_RNG_DATA_REG   0x24
+
+static void __iomem *rng_base;
+static struct platform_device *rng_dev;
+
+static u32 stm_rng_read_reg(int reg)
+{
+	return __raw_readl(rng_base + reg);
+}
+
+static int stm_rng_data_present(struct hwrng *rng)
+{
+	return ((stm_rng_read_reg(STM_RNG_STATUS_REG)&3) == 0);
+}
+
+static int stm_rng_data_read(struct hwrng *rng, u32 *data)
+{
+	*data = stm_rng_read_reg(STM_RNG_DATA_REG);
+
+	return 2;
+}
+
+static struct hwrng stm_rng_ops = {
+	.name		= "stm",
+	.data_present	= stm_rng_data_present,
+	.data_read	= stm_rng_data_read,
+};
+
+static int __init stm_rng_probe(struct platform_device *pdev)
+{
+	struct resource *res;
+	int ret;
+
+	BUG_ON(rng_dev);
+
+	res = platform_get_resource(pdev, IORESOURCE_MEM, 0);
+
+	if (!res){
+		printk(KERN_ERR "STM hw_random device probe failed."
+				"Please Check your SoC config.\n");
+		return -ENOENT;
+	}
+
+	rng_base = (u32 __iomem *)ioremap(res->start, 0x28);
+	if (!rng_base){
+		printk(KERN_ERR "STM hw_random device: cannot ioremap\n");
+		return -ENOMEM;
+	}
+
+	ret = hwrng_register(&stm_rng_ops);
+	if (ret) {
+		iounmap(rng_base);
+		rng_base = NULL;
+		return ret;
+	}
+
+	dev_info(&pdev->dev, "STM Random Number Generator ver. 0.1\n");
+
+	rng_dev = pdev;
+
+	return 0;
+}
+
+static int __exit stm_rng_remove(struct platform_device *pdev)
+{
+	hwrng_unregister(&stm_rng_ops);
+
+	iounmap(rng_base);
+	rng_base = NULL;
+
+	return 0;
+}
+
+static struct platform_driver stm_rng_driver = {
+	.driver = {
+		.name		= "stm_hwrandom",
+		.owner		= THIS_MODULE,
+	},
+	.probe		= stm_rng_probe,
+	.remove		= __exit_p(stm_rng_remove),
+};
+
+static int __init stm_rng_init(void)
+{
+	return platform_driver_register(&stm_rng_driver);
+}
+
+static void __exit stm_rng_exit(void)
+{
+	platform_driver_unregister(&stm_rng_driver);
+}
+
+module_init(stm_rng_init);
+module_exit(stm_rng_exit);
+
+MODULE_AUTHOR("ST Microelectronics <carl.shaw@st.com>");
+MODULE_LICENSE("GPL");
Index: linux/drivers/char/hw_random/Kconfig
===================================================================
--- linux.orig/drivers/char/hw_random/Kconfig	2007-10-12 17:43:44.000000000 +0100
+++ linux/drivers/char/hw_random/Kconfig	2007-10-29 14:23:19.860713000 +0000
@@ -105,3 +105,14 @@
 
 	  If unsure, say Y.
 
+config HW_RANDOM_STM
+	tristate "ST Microelectronics HW Random Number Generator support"
+	depends on HW_RANDOM && CPU_SUBTYPE_ST40
+	---help---
+	  This driver provides kernel-side support for the Random Number
+	  Generator hardware found on ST STx7109 and STx7200 SoCs.
+
+	  To compile this driver as a module, choose M here: the
+	  module will be called stm-rng.
+
+	  If unsure, say Y.
Index: linux/arch/sh/kernel/cpu/sh4/setup-stb7100.c
===================================================================
--- linux.orig/arch/sh/kernel/cpu/sh4/setup-stb7100.c	2007-10-29 14:23:02.804560000 +0000
+++ linux/arch/sh/kernel/cpu/sh4/setup-stb7100.c	2007-10-29 14:29:20.583958000 +0000
@@ -975,6 +975,26 @@
         platform_device_register(&lirc_device);
 }
 
+/* Hardware RNG resources -------------------------------------------------- */
+
+static struct platform_device hwrandom_rng_device = {
+	.name           = "stm_hwrandom",
+	.id             = -1,
+	.num_resources  = 1,
+	.resource       = (struct resource[]){
+		{
+			.start  = 0x19250000,
+			.end    = 0x19250fff,
+			.flags  = IORESOURCE_MEM
+		},
+	}
+};
+
+void __init stx7100_configure_hwrng(void)
+{
+        platform_device_register(&hwrandom_rng_device);
+}
+
 /* ASC resources ----------------------------------------------------------- */
 
 static struct platform_device stm_stasc_devices[] = {
