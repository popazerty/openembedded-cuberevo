This patch changes the uImage target so that it generates a wrapped compressed
vmlinux, rather than a wrapped zImage. The previous version matched the ARM,
this version matches the PPC. However I would question how useful a self
decompressing image is with a boot loader which does decompression, so I
think this is more useful. I also feel it matches the descrition in the help
text ("Compressed kernel image") better.

Signed-off-by: Thomas Betker <thomas.betker@5etech.eu>
Signed-off-by: Stuart Menefy <stuart.menefy@st.com>
diff -Naur linux-2.6.23.1.orig/arch/sh/boot/Makefile linux-2.6.23.1/arch/sh/boot/Makefile
--- linux-2.6.23.1.orig/arch/sh/boot/Makefile	2007-11-12 17:23:52.000000000 +0000
+++ linux-2.6.23.1/arch/sh/boot/Makefile	2007-11-21 16:39:40.000000000 +0000
@@ -39,17 +39,25 @@
 KERNEL_LOAD	:= $(shell /bin/bash -c 'printf "0x%8x" \
 		     $$[$(CONFIG_PAGE_OFFSET)  + \
 			$(CONFIG_MEMORY_START) + \
-			$(CONFIG_ZERO_PAGE_OFFSET)+0x1000]')
+			$(CONFIG_ZERO_PAGE_OFFSET)]')
+KERNEL_ENTRY	:= $(shell /bin/bash -c 'printf "0x%8x" \
+		     $$[$(KERNEL_LOAD)+0x1000]')
 
 quiet_cmd_uimage = UIMAGE  $@
       cmd_uimage = $(CONFIG_SHELL) $(MKIMAGE) -A sh -O linux -T kernel \
-		   -C gzip -a $(KERNEL_LOAD) -e $(KERNEL_LOAD) \
+		   -C gzip -a $(KERNEL_LOAD) -e $(KERNEL_ENTRY) \
 		   -n 'Linux-$(KERNELRELEASE)' -d $< $@
 
-$(obj)/uImage: $(obj)/zImage FORCE
+$(obj)/uImage: $(obj)/vmlinux.bin.gz FORCE
 	$(call if_changed,uimage)
 	@echo '  Image $@ is ready'
 
+$(obj)/vmlinux.bin: vmlinux FORCE
+	$(call if_changed,objcopy)
+
+$(obj)/vmlinux.bin.gz: $(obj)/vmlinux.bin FORCE
+	$(call if_changed,gzip)
+
 OBJCOPYFLAGS_vmlinux.srec := -I binary -O srec
 $(obj)/vmlinux.srec: $(obj)/compressed/vmlinux
 	$(call if_changed,objcopy)
@@ -59,3 +67,4 @@
 	$(call if_changed,objcopy)
 
 clean-files	+= uImage uImage.srec vmlinux.srec
+clean-files	+= vmlinux.bin vmlinux.bin.gz
