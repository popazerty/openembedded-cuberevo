From 22bd0c754ddc001ac2e087af5acc5874c91639fc Mon Sep 17 00:00:00 2001
From: Chris Smith <chris.smith@st.com>
Date: Tue, 2 Sep 2008 16:11:42 +0100
Subject: [PATCH] sh: Add printf-style interface for hardcoded kptrace records.

Signed-off-by: Chris Smith <chris.smith@st.com>
---
 arch/sh/kernel/kptrace.c |    5 ++---
 include/asm-sh/kptrace.h |   24 +++++++++++++++++-------
 2 files changed, 19 insertions(+), 10 deletions(-)

diff --git a/arch/sh/kernel/kptrace.c b/arch/sh/kernel/kptrace.c
index ff3095b..59a14e9 100644
--- a/arch/sh/kernel/kptrace.c
+++ b/arch/sh/kernel/kptrace.c
@@ -29,9 +29,6 @@
 #include <net/sock.h>
 #include <asm/sections.h>
 
-#define KPTRACE_BUF_SIZE 1024
-#define KPTRACE_SMALL_BUF 128
-
 #define INIT_SYSCALL_PROBE(x) create_tracepoint(set, #x, syscall_pre_handler, \
 				syscall_rp_handler);
 
@@ -67,6 +64,8 @@ typedef struct {
 static LIST_HEAD(tracepoint_sets);
 static LIST_HEAD(tracepoints);
 
+char kpprintf_buf[KPTRACE_BUF_SIZE];
+
 /* file-static data*/
 static char trace_buf[KPTRACE_BUF_SIZE];
 static char stack_buf[KPTRACE_BUF_SIZE];
diff --git a/include/asm-sh/kptrace.h b/include/asm-sh/kptrace.h
index 8683262..d0c642a 100644
--- a/include/asm-sh/kptrace.h
+++ b/include/asm-sh/kptrace.h
@@ -17,24 +17,34 @@
  * along with this program; if not, write to the Free Software
  * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
  *
- * Copyright (C) STMicroelectronics, 2007
+ * Copyright (C) STMicroelectronics, 2007, 2008
  *
  * 2007-July    Created by Chris Smith <chris.smith@st.com>
+ * 2008-August  kpprintf added by Chris Smith <chris.smith@st.com>
  */
 
 #ifdef CONFIG_KPTRACE
 
-// Mark a particular point in the code as "interesting" in the kptrace log
+#define KPTRACE_BUF_SIZE 1024
+#define KPTRACE_SMALL_BUF 128
+
+/* Mark a particular point in the code as "interesting" in the kptrace log */
 void kptrace_mark(void);
 
-// Write a string to the kptrace log
+/* Write a string to the kptrace log */
 void kptrace_write_record(const char *buf);
 
-// Stop logging trace records until kptrace_restart() is called
+/* Stop logging trace records until kptrace_restart() is called */
 void kptrace_pause(void);
 
-// Restart logging of trace records after a kptrace_pause()
+/* Restart logging of trace records after a kptrace_pause() */
 void kptrace_restart(void);
 
-#endif				/* CONFIG_KPTRACE */
-#endif				/* _LINUX_KPTRACE_H */
+/* Allow printf-style records to be added */
+extern char kpprintf_buf[KPTRACE_BUF_SIZE];
+#define kpprintf(args...) do { \
+	snprintf(kpprintf_buf, KPTRACE_BUF_SIZE, ## args); \
+	kptrace_write_record(kpprintf_buf); } while (0)
+
+#endif /* CONFIG_KPTRACE */
+#endif /* _LINUX_KPTRACE_H */
-- 
1.5.3.6

