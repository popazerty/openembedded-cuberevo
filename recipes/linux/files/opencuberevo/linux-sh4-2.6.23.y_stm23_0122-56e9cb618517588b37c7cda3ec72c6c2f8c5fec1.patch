From 56e9cb618517588b37c7cda3ec72c6c2f8c5fec1 Mon Sep 17 00:00:00 2001
From: Pawel MOLL <pawel.moll@st.com>
Date: Tue, 22 Sep 2009 17:40:52 +0100
Subject: [PATCH] stm_pio: Fix driver behaviour when platform device irq is -1 (or not given)

There are SOCs which don't have all the PIO interrupts wired up.
In such case the irq resource equals -1 or is not defined at all,
and the driver shouldn't misbehave because of this...

Signed-off-by: Pawel Moll <pawel.moll@st.com>
---
 drivers/stm/pio.c |   22 ++++++++++++++--------
 1 files changed, 14 insertions(+), 8 deletions(-)

diff --git a/drivers/stm/pio.c b/drivers/stm/pio.c
index 1737aa2..68b4e53 100644
--- a/drivers/stm/pio.c
+++ b/drivers/stm/pio.c
@@ -657,13 +657,16 @@ int stpio_get_resources(struct platform_device *pdev,
 	struct resource *memory_res, *irq_res;
 
 	memory_res = platform_get_resource(pdev, IORESOURCE_MEM, 0);
-	irq_res = platform_get_resource(pdev, IORESOURCE_IRQ, 0);
-	if (!memory_res || !irq_res)
+	if (!memory_res)
 		return -EINVAL;
-
 	*start = memory_res->start;
 	*size = (memory_res->end - memory_res->start) + 1;
-	*irq = irq_res->start;
+
+	irq_res = platform_get_resource(pdev, IORESOURCE_IRQ, 0);
+	if (irq_res)
+		*irq = irq_res->start;
+	else
+		*irq = -1;
 
 	return 0;
 }
@@ -793,9 +796,11 @@ static int __devinit stpio_probe(struct platform_device *pdev)
 
 	port->pdev = pdev;
 
-	set_irq_chained_handler(irq, stpio_irq_chip_handler);
-	set_irq_data(irq, port);
-	stpio_init_irq(pdev->id);
+	if (irq >= 0) {
+		set_irq_chained_handler(irq, stpio_irq_chip_handler);
+		set_irq_data(irq, port);
+		stpio_init_irq(pdev->id);
+	}
 
 	return 0;
 }
@@ -812,7 +817,8 @@ static int __devexit stpio_remove(struct platform_device *pdev)
 
 	BUG_ON(stpio_get_resources(pdev, &start, &size, &irq) != 0);
 
-	free_irq(irq, port);
+	if (irq >= 0)
+		free_irq(irq, port);
 	release_mem_region(start, size);
 
 	return 0;
-- 
1.6.0.6

