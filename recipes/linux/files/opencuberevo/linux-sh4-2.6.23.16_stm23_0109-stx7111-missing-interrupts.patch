Add in the missing interrupts for the STx7111 which are only described in
the toplevel architecture manual, not the programmer's manual.

Signed-off-by: Stuart Menefy <stuart.menefy@st.com>
Index: linux-2.6.23-stm/arch/sh/kernel/cpu/sh4/setup-stx7111.c
===================================================================
--- linux-2.6.23-stm.orig/arch/sh/kernel/cpu/sh4/setup-stx7111.c
+++ linux-2.6.23-stm/arch/sh/kernel/cpu/sh4/setup-stx7111.c
@@ -804,17 +804,19 @@ enum {
 	UART3, UART2, UART1, UART0,			/* Group 3 */
 	IRB_WAKEUP, IRB, PWM, MAFE,			/* Group 4 */
 	PCI_ERROR, FE900, DAA, TTXT,			/* Group 5 */
-	EMPI_PCI_DMA, GMAC, TS_MERGER,			/* Group 6 */
+	EMPI_PCI_DMA, GMAC, TS_MERGER, SBAG_OR_CEC,	/* Group 6 */
 	LX_DELTAMU, LX_AUD, DCXO, PMT,			/* Group 7 */
 	FDMA0, FDMA1, I2S2SPDIF, HDMI_CEC,		/* Group 8 */
 	PCMPLYR0, PCMPLYR1, PCMRDR, SPDIFPLYR,		/* Group 9 */
-	DELPHI_PRE0, NAND, DELPHI_MBE,			/* Group 10 */
+	DCS0, DELPHI_PRE0, NAND, DELPHI_MBE,		/* Group 10 */
 	MAIN_VDP_FIFO_EMPTY, MAIN_VDP_END_PROCESSING,	/* Group 11 */
 	MAIN_VTG, AUX_VTG,
 	BDISP_AQ, DVP, HDMI, HDCP,			/* Group 12 */
-	PTI,						/* Group 13 */
-	OHCI, EHCI, BDISP_CQ,				/* Group 15 */
-	KEY_SCANNER,					/* Group 16 */
+	PTI, PDES_ESA0_SEL, PDES, PDES_READ_CW,		/* Group 13 */
+	TKDMA_TKD, TKDMA_DMA, CRIPTO_SIG_DMA,		/* Group 14 */
+	CRIPTO_SIG_CHK,
+	OHCI, EHCI, DCS1, BDISP_CQ,			/* Group 15 */
+	ICAM3_KTE, ICAM3, KEY_SCANNER, MES_LMI_SYS,	/* Group 16 */
 
 	/* interrupt groups */
 	TMU2, RTC,
@@ -851,23 +853,27 @@ static struct intc_vect vectors[] = {
 	INTC_VECT(PCI_ERROR, 0x1200), INTC_VECT(FE900, 0x1220),
 	INTC_VECT(DAA, 0x1240), INTC_VECT(TTXT, 0x1260),
 	INTC_VECT(EMPI_PCI_DMA, 0x1280), INTC_VECT(GMAC, 0x12a0),
-	INTC_VECT(TS_MERGER, 0x12c0),
+	INTC_VECT(TS_MERGER, 0x12c0), INTC_VECT(SBAG_OR_CEC, 0x12e0),
 	INTC_VECT(LX_DELTAMU, 0x1300), INTC_VECT(LX_AUD, 0x1320),
 	INTC_VECT(DCXO, 0x1340), INTC_VECT(PMT, 0x1360),
 	INTC_VECT(FDMA0, 0x1380), INTC_VECT(FDMA1, 0x13a0),
 	INTC_VECT(I2S2SPDIF, 0x13c0), INTC_VECT(HDMI_CEC, 0x13e0),
 	INTC_VECT(PCMPLYR0, 0x1400), INTC_VECT(PCMPLYR1, 0x1420),
 	INTC_VECT(PCMRDR, 0x1440), INTC_VECT(SPDIFPLYR, 0x1460),
-	INTC_VECT(DELPHI_PRE0, 0x14a0), INTC_VECT(NAND, 0x14c0),
-	INTC_VECT(DELPHI_MBE, 0x14e0),
+	INTC_VECT(DCS0, 0x1480), INTC_VECT(DELPHI_PRE0, 0x14a0),
+	INTC_VECT(NAND, 0x14c0), INTC_VECT(DELPHI_MBE, 0x14e0),
 	INTC_VECT(MAIN_VDP_FIFO_EMPTY, 0x1500), INTC_VECT(MAIN_VDP_END_PROCESSING, 0x1520),
 	INTC_VECT(MAIN_VTG, 0x1540), INTC_VECT(AUX_VTG, 0x1560),
 	INTC_VECT(BDISP_AQ, 0x1580), INTC_VECT(DVP, 0x15a0),
 	INTC_VECT(HDMI, 0x15c0), INTC_VECT(HDCP, 0x15e0),
-	INTC_VECT(PTI, 0x1600),
+	INTC_VECT(PTI, 0x1600), INTC_VECT(PDES_ESA0_SEL, 0x1620),
+	INTC_VECT(PDES, 0x1640), INTC_VECT(PDES_READ_CW, 0x1660),
+	INTC_VECT(TKDMA_TKD, 0x1680), INTC_VECT(TKDMA_DMA, 0x16a0),
+	INTC_VECT(CRIPTO_SIG_DMA, 0x16c0), INTC_VECT(CRIPTO_SIG_CHK, 0x16e0),
 	INTC_VECT(OHCI, 0x1700), INTC_VECT(EHCI, 0x1720),
-	INTC_VECT(BDISP_CQ, 0x1760),
-	INTC_VECT(KEY_SCANNER, 0x17c0),
+	INTC_VECT(DCS1, 0x1740), INTC_VECT(BDISP_CQ, 0x1760),
+	INTC_VECT(ICAM3_KTE, 0x1780), INTC_VECT(ICAM3, 0x17a0),
+	INTC_VECT(KEY_SCANNER, 0x17c0), INTC_VECT(MES_LMI_SYS, 0x17e0)
 };
 
 static struct intc_group groups[] = {
@@ -885,17 +891,19 @@ static struct intc_group groups[] = {
 	INTC_GROUP(GROUP3, UART3, UART2, UART1, UART0),
 	INTC_GROUP(GROUP4, IRB_WAKEUP, IRB, PWM, MAFE),
 	INTC_GROUP(GROUP5, PCI_ERROR, FE900, DAA, TTXT),
-	INTC_GROUP(GROUP6, EMPI_PCI_DMA, GMAC, TS_MERGER),
+	INTC_GROUP(GROUP6, EMPI_PCI_DMA, GMAC, TS_MERGER, SBAG_OR_CEC),
 	INTC_GROUP(GROUP7, LX_DELTAMU, LX_AUD, DCXO, PMT),
 	INTC_GROUP(GROUP8, FDMA0, FDMA1, I2S2SPDIF, HDMI_CEC),
 	INTC_GROUP(GROUP9, PCMPLYR0, PCMPLYR1, PCMRDR, SPDIFPLYR),
-	INTC_GROUP(GROUP10, DELPHI_PRE0, NAND, DELPHI_MBE),
+	INTC_GROUP(GROUP10, DCS0, DELPHI_PRE0, NAND, DELPHI_MBE),
 	INTC_GROUP(GROUP11, MAIN_VDP_FIFO_EMPTY, MAIN_VDP_END_PROCESSING,
 		   MAIN_VTG, AUX_VTG),
 	INTC_GROUP(GROUP12, BDISP_AQ, DVP, HDMI, HDCP),
-	INTC_GROUP(GROUP13, PTI),
-	INTC_GROUP(GROUP15, OHCI, EHCI, BDISP_CQ),
-	INTC_GROUP(GROUP16, KEY_SCANNER),
+	INTC_GROUP(GROUP13, PTI, PDES_ESA0_SEL, PDES, PDES_READ_CW),
+	INTC_GROUP(GROUP14, TKDMA_TKD, TKDMA_DMA, CRIPTO_SIG_DMA,
+		   CRIPTO_SIG_CHK),
+	INTC_GROUP(GROUP15, OHCI, EHCI, DCS1, BDISP_CQ),
+	INTC_GROUP(GROUP16, ICAM3_KTE, ICAM3, KEY_SCANNER, MES_LMI_SYS),
 };
 
 static struct intc_prio priorities[] = {
@@ -927,20 +935,20 @@ static struct intc_mask_reg mask_registe
 	{ 0x00000344, 0x00000364, 32, /* INTMSK04 / INTMSKCLR04 */
 	  { HDMI_CEC, I2S2SPDIF, FDMA1, FDMA0,			/* 31..28 */
 	    PMT, DCXO, LX_AUD, LX_DELTAMU,			/* 27..24 */
-	    0, TS_MERGER, GMAC, EMPI_PCI_DMA,			/* 23..20 */
+	    SBAG_OR_CEC, TS_MERGER, GMAC, EMPI_PCI_DMA,		/* 23..20 */
 	    TTXT, DAA, FE900, PCI_ERROR,			/* 19..16 */
 	    MAFE, PWM, IRB, IRB_WAKEUP,				/* 15..12 */
 	    UART0, UART1, UART2, UART3,				/* 11...8 */
 	    SSC0, SSC1, SSC2, SSC3,				/*  7...4 */
 	    PIO3, PIO4, PIO5, PIO6 } },				/*  3...0 */
 	{ 0x00000348, 0x00000368, 32, /* INTMSK08 / INTMSKCLR08 */
-	  { 0, KEY_SCANNER, 0, 0,				/* 31..28 */
-	    BDISP_CQ, 0, EHCI, OHCI,				/* 27..24 */
-	    0, 0, 0, 0,						/* 23..20 */
-	    0, 0, 0, PTI,					/* 19..16 */
+	  { MES_LMI_SYS, KEY_SCANNER, ICAM3, ICAM3_KTE,		/* 31..28 */
+	    BDISP_CQ, DCS1, EHCI, OHCI,				/* 27..24 */
+	    CRIPTO_SIG_CHK, CRIPTO_SIG_DMA, TKDMA_DMA, TKDMA_TKD, /* 23..20 */
+	    PDES_READ_CW, PDES, PDES_ESA0_SEL, PTI,		/* 19..16 */
 	    HDCP, HDMI, DVP, BDISP_AQ,				/* 15..12 */
 	    AUX_VTG, MAIN_VTG, MAIN_VDP_END_PROCESSING, MAIN_VDP_FIFO_EMPTY, /* 11...8 */
-	    DELPHI_MBE, NAND, DELPHI_PRE0, 0,			/*  7...4 */
+	    DELPHI_MBE, NAND, DELPHI_PRE0, DCS0,		/*  7...4 */
 	    SPDIFPLYR, PCMRDR, PCMPLYR1, PCMPLYR0 } }		/*  3...0 */
 };
 
