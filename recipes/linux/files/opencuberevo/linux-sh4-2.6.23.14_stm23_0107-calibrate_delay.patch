This patch adds a new calibrate delay based on the core clock speed to improve
the kernel boot time

Signed-off-by: Francesco Virlinzi <francesco.virlinzi@st.com>
Signed-off-by: Carl Shaw <carl.shaw@st.com>
Index: linux/arch/sh/Kconfig
===================================================================
--- linux.orig/arch/sh/Kconfig	2008-03-04 12:16:51.000000000 +0000
+++ linux/arch/sh/Kconfig	2008-03-04 12:16:51.000000000 +0000
@@ -42,10 +42,6 @@
 	bool
 	default y
 
-config GENERIC_CALIBRATE_DELAY
-	bool
-	default y
-
 config GENERIC_IOMAP
 	bool
 
@@ -589,6 +585,18 @@
 
 	  This option needs to be set to use the SH watchdog.
 
+choice
+	prompt "Calibrate delay"
+	default GENERIC_CALIBRATE_DELAY
+
+config GENERIC_CALIBRATE_DELAY
+	bool "Use the generic calibrate delay"
+
+config SH4_CALIBRATE_DELAY
+	depends on CPU_SH4
+	bool "Use an SH-4 specific fast calibrate delay"
+endchoice
+
 menu "CPU Frequency scaling"
 
 source "drivers/cpufreq/Kconfig"
Index: linux/arch/sh/lib/calibrate-sh4.c
===================================================================
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ linux/arch/sh/lib/calibrate-sh4.c	2008-03-05 13:24:04.000000000 +0000
@@ -0,0 +1,40 @@
+/* calibrate.c: default delay calibration
+ *
+ *  <linux>/arch/sh/lib/calibrate.c
+ *  -------------------------------------------------------------------------
+ *  Copyright (C) 2008 STMicroelectronics
+ *  Author:  Virlinzi Francesco <francesco.virlinzi@st.com>
+ *  -------------------------------------------------------------------------
+ *  May be copied or modified under the terms of the GNU General Public V2
+ *  License.  See linux/COPYING for more information.
+ *  -------------------------------------------------------------------------
+ */
+
+#include <linux/sched.h>
+#include <linux/delay.h>
+#include <linux/init.h>
+#include <linux/err.h>
+
+#include <asm/timex.h>
+#include <asm/clock.h>
+#include <asm/param.h>
+
+void __devinit calibrate_delay(void)
+{
+	struct clk *cclk = clk_get(NULL, "sh4_clk");
+	if (IS_ERR(cclk)) {
+		panic("Cannot get CPU clock!");
+	}
+
+	loops_per_jiffy = (clk_get_rate(cclk) / 2) / HZ;
+/*
+ * The number '2' in the previous formula comes from
+ * the number of instructions in the __delay loop
+ * (see lib/delay.c)
+ */
+	printk(KERN_INFO "SH4 "
+			"%lu.%02lu BogoMIPS PRESET (lpj=%lu)\n",
+			loops_per_jiffy/(500000/HZ),
+			(loops_per_jiffy/(5000/HZ)) % 100,
+			loops_per_jiffy);
+}
Index: linux/arch/sh/lib/Makefile
===================================================================
--- linux.orig/arch/sh/lib/Makefile	2008-03-04 11:47:57.000000000 +0000
+++ linux/arch/sh/lib/Makefile	2008-03-04 12:16:51.000000000 +0000
@@ -7,5 +7,5 @@
 
 memcpy-y			:= memcpy.o
 memcpy-$(CONFIG_CPU_SH4)	:= memcpy-sh4.o
-
+lib-$(CONFIG_SH4_CALIBRATE_DELAY) += calibrate-sh4.o
 lib-y	+= $(memcpy-y)
